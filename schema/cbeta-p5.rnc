namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.cbeta.org/ns/1.0"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"

# Schema generated from ODD source 2011-01-08T10:01:44Z. 
# TEI Edition: 1.3.0. Last updated on February 1st 2009.
#

#
tei_macro.paraContent =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.global
   | tei_lg)*

tei_macro.limitedContent =
  (text | tei_model.limitedPhrase | tei_model.inter)*
tei_macro.phraseSeq =
  (text | tei_model.gLike | tei_model.phrase | tei_model.global)*
tei_macro.phraseSeq.limited =
  (text | tei_model.limitedPhrase | tei_model.global)*
tei_macro.specialPara =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.divPart
   | tei_model.global)*
tei_macro.xtext = (text | tei_model.gLike)*

data.pointer = xsd:anyURI

att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indicates the person, or group of
  ##	people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI+ }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## provides an externally-defined means
  ##  of identifying the entity (or entities) being named, using a coded value
  ##       of some kind.
  attribute key { xsd:string }?
att.canonical.attribute.ref =
  
  ##  (reference) provides an explicit means of locating a full definition
  ##       for the entity being named by means of one or more URIs.
  attribute ref {
    list { xsd:anyURI+ }
  }?
att.dimensions.attributes =
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity,
  att.dimensions.attribute.extent,
  att.dimensions.attribute.atLeast,
  att.dimensions.attribute.atMost,
  att.dimensions.attribute.min,
  att.dimensions.attribute.max,
  att.dimensions.attribute.precision,
  att.dimensions.attribute.scope
att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## : 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:Name
  }?
att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity { xsd:double | xsd:decimal }?
att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a
  ##       project-specific vocabulary combining quantity and units in a
  ##       single string of words.  
  attribute extent {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.dimensions.attribute.atLeast =
  
  ## gives a minimum  estimated value for the  measurement.
  attribute atLeast { xsd:double | xsd:decimal }?
att.dimensions.attribute.atMost =
  
  ## gives a maximum  estimated value for the  measurement.
  attribute atMost { xsd:double | xsd:decimal }?
att.dimensions.attribute.min =
  
  ## where the measurement summarizes more than one
  ##       observation, supplies the minimum value observed.
  attribute min { xsd:double | xsd:decimal }?
att.dimensions.attribute.max =
  
  ## where the measurement summarizes more than one
  ##       observation, supplies the maximum value observed.
  attribute max { xsd:double | xsd:decimal }?
att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the
  ##       other attributes.
  attribute precision { "high" | "medium" | "low" | "unknown" }?
att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one
  ##       observation, specifies the applicability of this measurement.
  ## : 1] all; 2] most; 3] range
  attribute scope { xsd:Name }?
att.damaged.attributes =
  att.dimensions.attributes,
  att.damaged.attribute.hand,
  att.damaged.attribute.agent,
  att.damaged.attribute.degree,
  att.damaged.attribute.group
att.damaged.attribute.hand =
  
  ## In the case of damage (deliberate defacement, inking out,
  ##       etc.) assignable to a distinct hand, signifies the hand
  ##       responsible for the damage.
  attribute hand { xsd:anyURI }?
att.damaged.attribute.agent =
  
  ## categorizes the cause of the damage, if it can be identified.
  ## : 1] rubbing; 2] mildew; 3] smoke
  attribute agent { xsd:Name }?
att.damaged.attribute.degree =
  
  ## Signifies the degree of damage according to a convenient scale.
  ## The damage tag with the degree attribute should
  ## only be used where the text may be read with some confidence; text
  ## supplied from other sources should be tagged as supplied.
  attribute degree { text }?
att.damaged.attribute.group =
  
  ## assigns an arbitrary number to each stretch of damage
  ##       regarded as forming part of the same physical phenomenon.
  attribute group { xsd:nonNegativeInteger }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.period,
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.period =
  
  ## supplies a pointer to some location defining a named
  ##       period of time within which the datable item is understood to
  ##       have occurred.
  attribute period { xsd:anyURI }?
att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form,
  ##       e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in
  ##	  standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in
  ##	  standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard
  ##	  form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.attributes =
  att.datable.w3c.attributes, att.datable.iso.attributes
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when
  ## its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the
      ## only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
att.declaring.attributes = att.declaring.attribute.decls
att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the
  ## header, which are understood to apply to the element bearing this
  ## attribute and its content.
  attribute decls {
    list { xsd:anyURI+ }
  }?
att.divLike.attributes =
  att.divLike.attribute.org,
  att.divLike.attribute.sample,
  att.divLike.attribute.part
att.divLike.attribute.org =
  
  ## (organization) specifies how the content of the division is organized.
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## composite content: i.e. no claim is made about the
    ##		  sequence in which the immediate contents of this division
    ##		  are to be processed, or their inter-relationships.
    "composite"
    | 
      ## uniform content: i.e. the immediate contents of this
      ##		  element are regarded as forming a logical unit, to be
      ##		  processed in sequence.
      "uniform"
  }?
att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the
  ##		original source and if so, from which part.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## division lacks material present at end in source.
    "initial"
    | 
      ## division lacks material at start and end.
      "medial"
    | 
      ## division lacks material at start.
      "final"
    | 
      ## position of sampled material within original unknown.
      "unknown"
    | 
      ## division is not a sample.
      "complete"
  }?
att.divLike.attribute.part =
  
  ## specifies whether or not the division is fragmented by
  ##		some other structural element, for example a speech which is
  ##		divided between two or more verse stanzas.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the division is incomplete in some respect
    "Y"
    | 
      ## (no) either the division is complete, or no claim is made as to its completeness.
      "N"
    | 
      ## (initial) the initial part of an incomplete division
      "I"
    | 
      ## (medial) a medial part of an incomplete division
      "M"
    | 
      ## (final) the final part of an incomplete division
      "F"
  }?
att.editLike.attributes =
  att.dimensions.attributes,
  att.editLike.attribute.evidence,
  att.editLike.attribute.source
att.editLike.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the
  ##	intervention or interpretation.
  attribute cert { "high" | "medium" | "low" | "unknown" }?
att.editLike.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the
  ##	intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?
att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or
  ##   accuracy of the intervention or interpretation.
  ## : 1] internal; 2] external; 3] conjecture
  attribute evidence {
    
    ## there is internal evidence to support the intervention.
    "internal"
    | 
      ## there is external evidence to support the intervention.
      "external"
    | 
      ## the intervention or interpretation has been made by
      ##	    the editor, cataloguer, or scholar on the basis of their
      ##	    expertise.
      "conjecture"
    | xsd:Name
  }?
att.editLike.attribute.source =
  
  ## contains a list of one or more pointers indicating the
  ##       sources which support the given reading.
  attribute source {
    list { xsd:anyURI+ }
  }?
att.global.attributes =
  att.global.linking.attributes,
  att.global.facs.attributes,
  att.global.responsibility.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.rend,
  att.global.attribute.rendition,
  att.global.attribute.style,
  att.global.attribute.xmlbase
att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the
  ##       attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is
  ##       not necessarily unique within the document.
  attribute n {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a
  ##       tag generated according to BCP 47
  attribute xml:lang { xsd:language | "" }?
att.global.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or
  ##	presented in the source text.
  attribute rend { text }?
att.global.attribute.rendition =
  
  ## points to a description of the rendering  or
  ##	presentation used for this element in the source text.
  attribute rendition {
    list { xsd:anyURI+ }
  }?
att.global.attribute.style =
  attribute style { text }?
att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can
  ##       resolve relative URI references into absolute URI
  ##       references.
  attribute xml:base { xsd:anyURI }?


att.global.responsibility.attributes =
  att.global.responsibility.attribute.cert,
  att.global.responsibility.attribute.resp

att.global.responsibility.attribute.cert =
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?

att.global.responsibility.attribute.resp =
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?

att.handFeatures.attributes =
  att.handFeatures.attribute.scribe,
  att.handFeatures.attribute.script,
  att.handFeatures.attribute.medium,
  att.handFeatures.attribute.scope
att.handFeatures.attribute.scribe =
  
  ## gives a standard name or other identifier for the scribe
  ## believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by
  ## this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name+ }
  }?
att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other
  ## writing medium, e.g. pencil
  attribute medium { xsd:Name }?
att.handFeatures.attribute.scope =
  
  ## specifies how widely this  hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
att.internetMedia.attributes = att.internetMedia.attribute.mimeType
att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.measurement.attributes =
  att.measurement.attribute.unit,
  att.measurement.attribute.quantity,
  att.measurement.attribute.commodity
att.measurement.attribute.unit =
  
  ## indicates the units used for the measurement, usually
  ##       using the standard symbol for the desired units.
  ## : 1] m(metre) ; 2] kg(kilogram) ; 3] s(second) ; 4] Hz(hertz) ; 5] Pa(pascal) ; 6] Ω(ohm) ; 7] L(litre) ; 8] t(tonne) ; 9] ha(hectare) ; 10] Å(ångström) ; 11] mL(millilitre) ; 12] cm(centimetre) ; 13] dB(decibel) ; 14] kbit(kilobit) ; 15] Kibit(kibibit) ; 16] kB(kilobyte) ; 17] KiB(kibibyte) ; 18] MB(megabyte) ; 19] MiB(mebibyte) 
  attribute unit {
    
    ## (metre) SI base unit of length
    "m"
    | 
      ## (kilogram) SI base unit of mass
      "kg"
    | 
      ## (second) SI base unit of time
      "s"
    | 
      ## (hertz) SI unit of frequency
      "Hz"
    | 
      ## (pascal) SI unit of pressure or stress
      "Pa"
    | 
      ## (ohm) SI unit of electric resistance
      "Ω"
    | 
      ## (litre) 1 dm³
      "L"
    | 
      ## (tonne) 10³ kg
      "t"
    | 
      ## (hectare) 1 hm²
      "ha"
    | 
      ## (ångström) 10⁻¹⁰ m
      "Å"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimetre) 
      "cm"
    | 
      ## (decibel) see remarks, below
      "dB"
    | 
      ## (kilobit) 10³ or 1000 bits
      "kbit"
    | 
      ## (kibibit) 2¹⁰ or 1024 bits
      "Kibit"
    | 
      ## (kilobyte) 10³ or 1000 bytes
      "kB"
    | 
      ## (kibibyte) 2¹⁰ or 1024 bytes
      "KiB"
    | 
      ## (megabyte) 10⁶ or 1 000 000 bytes
      "MB"
    | 
      ## (mebibyte) 2²⁰ or 1 048 576 bytes
      "MiB"
    | xsd:Name
  }?
att.measurement.attribute.quantity =
  
  ## specifies the number of the specified units that
  ##       comprise the measurement
  attribute quantity { xsd:double | xsd:decimal }?
att.measurement.attribute.commodity =
  
  ## indicates the substance that is being measured
  attribute commodity {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.naming.attributes =
  att.canonical.attributes, att.naming.attribute.nymRef
att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form
  ##       (nym) of the names associated with the object
  ##        named by
  ##       the element bearing it.
  attribute nymRef {
    list { xsd:anyURI+ }
  }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
  
  ## 
  ## : 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ##  in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:Name)+
    }
  }?
att.segLike.attributes =
  att.segLike.attribute.function, att.segLike.attribute.part
att.segLike.attribute.function =
  
  ## characterizes the function of the segment.
  attribute function { xsd:Name }?
att.segLike.attribute.part =
  
  ## specifies whether or not the segment is fragmented by some other
  ## structural element, for example a clause which is divided between two
  ## or more sentences.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the segment is incomplete in some respect
    "Y"
    | 
      ## (no) either the segment is complete, or no claim is made as to
      ## its completeness
      "N"
    | 
      ## (initial) the initial part of an incomplete segment
      "I"
    | 
      ## (medial) a medial part of an incomplete segment
      "M"
    | 
      ## (final) the final part of an incomplete segment
      "F"
  }?
att.sourced.attributes = att.sourced.attribute.ed
att.sourced.attribute.ed =
  
  ##  (edition) supplies an arbitrary identifier for the source edition in which
  ##       the associated feature (for example, a  page, column, or line
  ##       break) occurs at this point in the text.
  attribute ed {
    list { xsd:anyURI+ }
  }?
att.spanning.attributes = att.spanning.attribute.spanTo
att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element
  ##	bearing this attribute.
  attribute spanTo { xsd:anyURI }?
att.tableDecoration.attributes =
  att.tableDecoration.attribute.role,
  att.tableDecoration.attribute.rows,
  att.tableDecoration.attribute.cols
att.tableDecoration.attribute.role =
  
  ## indicates the kind of information held in this cell or
  ## in each cell of this row.
  ## : 1] label; 2] data
  [ a:defaultValue = "data" ]
  attribute role {
    
    ## labelling or descriptive information only.
    "label"
    | 
      ## data values.
      "data"
    | xsd:Name
  }?
att.tableDecoration.attribute.rows =
  
  ## indicates the number of rows occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute rows { xsd:nonNegativeInteger }?
att.tableDecoration.attribute.cols =
  
  ## (columns) indicates the number of columns occupied by this cell or
  ##	row.
  [ a:defaultValue = "1" ] attribute cols { xsd:nonNegativeInteger }?
att.transcriptional.attributes =
  att.editLike.attributes,
  att.transcriptional.attribute.hand,
  att.transcriptional.attribute.status,
  att.transcriptional.attribute.seq
att.transcriptional.attribute.hand =
  
  ## signifies the hand of the agent which made the intervention.
  attribute hand { xsd:anyURI }?
att.transcriptional.attribute.status =
  
  ## indicates the effect of the intervention, for example in
  ##       the case of a deletion, strikeouts
  ##       which include too much or too little text, or in the case of an
  ##       addition, an insertion which duplicates some of the text
  ##       already present.
  ## : 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ] attribute status { xsd:Name }?
att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which
  ##       the encoded features carrying this attribute are believed to have occurred.
  attribute seq { xsd:nonNegativeInteger }?
att.translatable.attributes = att.translatable.attribute.version
att.translatable.attribute.version =
  
  ## specifies the version name or number of the source from
  ##	which the translated version was derived
  attribute version {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient
  ##  classification scheme or typology.
  attribute type { xsd:Name }?
att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype { xsd:Name }?
tei_model.nameLike.agent = tei_name | tei_orgName | tei_persName
tei_model.segLike = tei_seg
tei_model.hiLike = tei_hi
tei_model.emphLike =
  tei_foreign
  | tei_emph
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
tei_model.highlighted = tei_model.hiLike | tei_model.emphLike
tei_model.dateLike = tei_date | tei_time
tei_model.measureLike = tei_num | tei_measure | tei_measureGrp | tei_geo
tei_model.egLike = notAllowed
tei_model.graphicLike = tei_graphic | tei_binaryObject | tei_formula
tei_model.offsetLike = tei_offset | tei_geogFeat
tei_model.pPart.msdesc = tei_handShift
tei_model.pPart.editorial =
  tei_choice | tei_abbr | tei_expan | tei_ex | tei_am | tei_subst
tei_model.pPart.transcriptional =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_app
  | tei_damage
  | tei_restore
  | tei_supplied
tei_model.pPart.edit =
  tei_model.pPart.editorial | tei_model.pPart.transcriptional
tei_model.ptrLike = tei_ptr | tei_ref
tei_model.global.meta =
  tei_index
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
tei_model.milestoneLike =
  tei_milestone
  | tei_pb
  | tei_lb
  | tei_cb
  | tei_anchor
  | tei_fw
  | tei_mulu
tei_model.gLike = tei_g
tei_model.biblLike = tei_bibl | tei_biblStruct | tei_biblFull | tei_msDesc
tei_model.headLike = tei_head
tei_model.labelLike = tei_desc | tei_label
tei_model.listLike =
  tei_list
  | tei_listBibl
  | tei_listWit
  | tei_listOrg
  | tei_listEvent
  | tei_listPerson
  | tei_listPlace
  | tei_listNym
tei_model.noteLike = tei_note | tei_witDetail
tei_model.lLike = tei_l
tei_model.pLike = tei_p | tei_ab | tei_dialog
tei_model.stageLike = tei_stage
tei_model.entryPart =
  tei_superEntry
  | tei_hom
  | tei_sense
  | tei_form
  | tei_orth
  | tei_pron
  | tei_hyph
  | tei_syll
  | tei_stress
  | tei_gen
  | tei_number
  | tei_case
  | tei_per
  | tei_tns
  | tei_mood
  | tei_iType
  | tei_gramGrp
  | tei_pos
  | tei_subc
  | tei_colloc
  | tei_def
  | tei_etym
  | tei_usg
  | tei_lbl
  | tei_xr
  | tei_re
tei_model.entryPart.top =
  tei_cit
  | tei_dictScrap
  | tei_form
  | tei_gramGrp
  | tei_def
  | tei_etym
  | tei_usg
  | tei_xr
  | tei_re
tei_model.global.edit =
  tei_gap | tei_addSpan | tei_damageSpan | tei_delSpan | tei_space
tei_model.divPart =
  tei_model.lLike | tei_model.pLike | tei_lg | tei_sp | tei_floatingText
tei_model.persTraitLike =
  tei_age
  | tei_faith
  | tei_langKnowledge
  | tei_nationality
  | tei_sex
  | tei_socecStatus
  | tei_trait
tei_model.persStateLike =
  tei_persName
  | tei_affiliation
  | tei_education
  | tei_floruit
  | tei_occupation
  | tei_residence
  | tei_state
tei_model.persEventLike = tei_birth | tei_death | tei_event
tei_model.personLike = tei_org | tei_person | tei_personGrp
tei_model.personPart =
  tei_model.persTraitLike
  | tei_model.persStateLike
  | tei_model.persEventLike
  | tei_bibl
tei_model.placeTraitLike =
  tei_climate | tei_location | tei_population | tei_terrain | tei_trait
tei_model.placeNamePart =
  tei_placeName
  | tei_bloc
  | tei_country
  | tei_region
  | tei_district
  | tei_settlement
  | tei_geogName
tei_model.placeStateLike = tei_model.placeNamePart | tei_state
tei_model.placeEventLike = tei_event
tei_model.publicationStmtPart =
  tei_address
  | tei_date
  | tei_publisher
  | tei_pubPlace
  | tei_distributor
  | tei_authority
  | tei_idno
  | tei_availability
tei_model.glossLike = tei_desc | tei_gloss
tei_model.quoteLike = tei_quote | tei_cit
tei_model.qLike = tei_model.quoteLike | tei_said | tei_q
tei_model.respLike =
  tei_author
  | tei_editor
  | tei_respStmt
  | tei_sponsor
  | tei_funder
  | tei_principal
tei_model.divWrapper =
  tei_meeting
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_docAuthor
  | tei_docDate
  | tei_mulu
tei_model.divTopPart = tei_model.headLike | tei_opener | tei_salute
tei_model.divTop = tei_model.divWrapper | tei_model.divTopPart
tei_model.pLike.front =
  tei_head
  | tei_argument
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.divBottomPart =
  tei_trailer | tei_closer | tei_signed | tei_postscript
tei_model.divBottom = tei_model.divWrapper | tei_model.divBottomPart
tei_model.titlepagePart =
  tei_graphic
  | tei_binaryObject
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_imprimatur
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
  | tei_figure
tei_model.choicePart =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_unclear
  | tei_abbr
  | tei_expan
  | tei_seg
  | tei_ex
  | tei_am
tei_model.imprintPart =
  tei_publisher | tei_biblScope | tei_pubPlace | tei_distributor
tei_model.catDescPart = notAllowed
tei_model.addressLike = tei_email | tei_address | tei_affiliation
tei_model.nameLike =
  tei_model.nameLike.agent
  | tei_model.offsetLike
  | tei_model.placeStateLike
  | tei_rs
  | tei_lang
  | tei_model.persNamePart
tei_model.global =
  tei_model.global.meta
  | tei_model.milestoneLike
  | tei_model.noteLike
  | tei_model.global.edit
  | tei_byline
  | tei_dTitle
  | tei_docNumber
  | tei_juan
tei_model.biblPart =
  tei_model.respLike
  | tei_model.imprintPart
  | tei_series
  | tei_meeting
  | tei_relatedItem
  | tei_edition
  | tei_extent
  | tei_idno
tei_model.frontPart = tei_divGen | tei_titlePage
tei_model.addrPart =
  tei_model.nameLike
  | tei_addrLine
  | tei_street
  | tei_postCode
  | tei_postBox
tei_model.pPart.data =
  tei_model.dateLike
  | tei_model.measureLike
  | tei_model.addressLike
  | tei_model.nameLike
tei_model.inter =
  tei_model.egLike
  | tei_model.biblLike
  | tei_model.labelLike
  | tei_model.listLike
  | tei_model.stageLike
  | tei_model.qLike
  | tei_table
  | tei_figure
  | tei_jhead
  | tei_tt
  | tei_fan
tei_model.common =
  tei_model.divPart | tei_model.inter | tei_model.entryLike
tei_model.phrase =
  tei_model.segLike
  | tei_model.highlighted
  | tei_model.graphicLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.edit
  | tei_model.ptrLike
  | tei_model.pPart.data
  | tei_model.ptrLike.form
  | tei_t
  | tei_yin
  | tei_jl_title
  | tei_jl_juan
  | tei_jl_byline
tei_model.limitedPhrase =
  tei_model.emphLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.editorial
  | tei_model.ptrLike
  | tei_model.pPart.data
tei_model.divLike = tei_div | tei_dialog
tei_model.divGenLike = tei_divGen
tei_model.div1Like = tei_div1
tei_model.div2Like = tei_div2
tei_model.div3Like = tei_div3
tei_model.div4Like = tei_div4
tei_model.div5Like = tei_div5
tei_model.div6Like = tei_div6
tei_model.div7Like = tei_div7

att.source.attributes = att.source.attribute.source
att.source.attribute.source =
  ##  (pointer to a bibliographical source reference) provides a pointer to the bibliographical source from which a quotation or citation is drawn.
  attribute source {
    list { data.pointer+ }
  }?

tei_model.resourceLike = tei_facsimile
att.personal.attributes =
  att.naming.attributes,
  att.personal.attribute.full,
  att.personal.attribute.sort
att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an
  ## abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an
      ## abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by
      ## one initial.
      "init"
  }?
att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation
  ## to others within the personal name.
  attribute sort { xsd:nonNegativeInteger }?
tei_model.placeLike = tei_place

tei_p =
  ## (paragraph) marks paragraphs in prose.
  element p {
    tei_macro.paraContent,
    
    ## The type attribute has been added to distinguish different
    ##                                     types of paragraphs, for example those containing a dharani, a
    ##                                     dedication, etc.
    attribute ns1:type { text }?,
    attribute ns1:place { text }?,
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
tei_foreign =
  
  ## (foreign) identifies a word or phrase as belonging to some language other than that of the
  ##                 surrounding text. 
  element foreign {
    tei_macro.phraseSeq,
    
    ##
    attribute ns1:resp { xsd:anyURI }?,
    
    ##
    attribute ns1:place { text }?,
    
    ##
    attribute ns1:cert { text }?,
    att.global.attributes,
    empty
  }
tei_emph =
  
  ## (emphasized) marks words or phrases which are stressed or emphasized for
  ##         linguistic or rhetorical effect.
  element emph { tei_macro.paraContent, att.global.attributes, empty }
tei_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the
  ##         surrounding text, for reasons concerning which no claim is
  ##         made. 
  element hi { tei_macro.paraContent, att.global.attributes, empty }
tei_distinct =
  
  ## identifies any word or phrase which is regarded as linguistically distinct, for example as
  ##         archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage. 
  element distinct {
    tei_macro.phraseSeq,
    att.global.attributes,
    
    ## specifies the sublanguage or register to which the word or phrase is being
    ##                 assigned
    attribute type { xsd:Name }?,
    
    ## specifies how the phrase is distinct diachronically
    attribute time { xsd:anyURI }?,
    
    ## specifies how the phrase is distinct diatopically
    attribute space { xsd:anyURI }?,
    
    ## specifies how the phrase is distinct diastatically
    attribute social { xsd:anyURI }?,
    empty
  }
tei_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether
  ##         explicitly indicated in the source or not, whether directly
  ##         or indirectly reported, whether by real people or
  ##         fictional characters.
  element said {
    tei_macro.specialPara,
    att.global.attributes,
    att.ascribed.attributes,
    
    ## may be used to indicate whether the quoted matter
    ##                 is regarded as having been vocalized or signed.
    [ a:defaultValue = "unknown" ]
    attribute aloud { xsd:boolean | "unknown" | "inapplicable" }?,
    
    ## may be used to indicate whether the quoted matter is regarded
    ##                 as direct or indirect speech.
    [ a:defaultValue = "true" ]
    attribute direct { xsd:boolean | "unknown" | "inapplicable" }?,
    empty
  }

tei_quote =  
	## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external
	##         to the text.
	element quote {
		tei_macro.specialPara,
		att.global.attributes,
		att.typed.attributes,
		att.source.attributes,
		empty
	}

tei_q =
  
  ## (separated from the surrounding text with quotation marks) contains material which is marked as (ostensibly) being somehow different than the
  ##     surrounding text, for any one of a variety of reasons including, but not limited to: direct
  ##     speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and
  ##     passages that are mentioned but not used.
  element q {
    tei_macro.specialPara,
    att.global.attributes,
    att.ascribed.attributes,
    
    ## may be used to indicate whether the offset passage is spoken or thought, or to
    ##         characterize it more finely.
    ## : 1] spoken; 2] thought; 3] written; 4] soCalled; 5] foreign(foreign words) ; 6] distinct(linguistically distinct) ; 7] term(technical term) ; 8] emph(rhetorically emphasized) ; 9] mentioned
    attribute type {
      
      ## representation of speech
      "spoken"
      | 
        ## representation of thought, e.g. internal monologue
        "thought"
      | 
        ## quotation from a written source
        "written"
      | 
        ## authorial distance
        "soCalled"
      | 
        ## (foreign words) 
        "foreign"
      | 
        ## (linguistically distinct) 
        "distinct"
      | 
        ## (technical term) 
        "term"
      | 
        ## (rhetorically emphasized) 
        "emph"
      | 
        ## refering to itself, not its normal referant
        "mentioned"
      | xsd:Name
    }?,
    empty
  }
tei_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to
  ##     its source. In a dictionary it may contain an example text with at least one occurrence of the
  ##     word form, used in the sense being described, or a translation of the headword, or an example. 
  element cit {
    (tei_model.qLike
     | tei_model.biblLike
     | tei_model.ptrLike
     | tei_model.global
     | tei_model.entryPart)+,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
tei_mentioned =
  
  ## marks words or phrases mentioned, not used.
  element mentioned {
    tei_macro.phraseSeq, att.global.attributes, empty
  }
tei_soCalled =
  
  ## contains a word or phrase for which the author or narrator
  ##         indicates a disclaiming of responsibility, for example by the use
  ##         of scare quotes or italics.
  element soCalled { tei_macro.phraseSeq, att.global.attributes, empty }
tei_desc =
  
  ## (description) contains a brief description of the object documented by its parent element, including its
  ##     intended usage, purpose, or application where this is appropriate.
  element desc {
    tei_macro.limitedContent,
    att.global.attributes,
    att.translatable.attributes,
    empty
  }
tei_gloss =
  
  ## identifies a phrase or word used to provide a gloss or definition for some other word or
  ##     phrase.
  element gloss {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.declaring.attributes,
    att.translatable.attributes,
    att.typed.attributes,
    (
     ## identifies the associated term element by an absolute or relative URI reference
     attribute target { xsd:anyURI }?
     | 
       ## (canonical reference) identifies the associated term element using a canonical reference from a
       ##         scheme defined in a refsDecl element in the TEI header
       attribute cRef { xsd:anyURI }?),
    empty
  }
tei_term =
  
  ## contains a single-word, multi-word, or symbolic designation which is regarded as a
  ##         technical term.
  element term {
    tei_macro.phraseSeq,
    attribute ns1:behaviour { text }?,
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    att.canonical.attributes,
    
    ## supplies the sort key for this term in an index.
    attribute sortKey {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    (
     ## identifies the associated gloss element by an absolute or relative
     ##                     URI reference
     attribute target { xsd:anyURI }?
     | 
       ## identifies the associated gloss element using a canonical reference
       ##                     from a scheme defined in a refsDecl element in the TEI header
       attribute cRef { xsd:anyURI }?),
    empty
  }
tei_sic =
  
  ## (latin for thus or so
  ##     ) contains text reproduced although apparently incorrect or inaccurate.
  element sic { tei_macro.paraContent, att.global.attributes, empty }

# 2014.3.14 CBETA 修改, corr 下允許 head, l, p
tei_corr =  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text.
  element corr {
    (tei_macro.paraContent | tei_head | tei_l | tei_p)*,
    att.global.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }

tei_choice =
  
  ## groups a number of alternative encodings for the same point in
  ##         a text.
  element choice {
    (tei_model.choicePart | tei_choice)*,
    
    ##
    attribute ns1:type { text }?,
    
    ## certainty of the assertion
    attribute ns1:cert { text }?,
    
    ## indicates that this emendment is caused by a "shift"
    attribute ns1:shift { text }?,
    
    ## indicates the responsibility
    attribute ns1:resp { xsd:anyURI }?,
    
    ## identifies the beginning of the choice in the base text, if
    ##                                     necessary.
    attribute ns1:from { xsd:anyURI }?,
    
    ## identifies the end of the choice in the base text, if
    ##                                     necessary.
    attribute ns1:to { xsd:anyURI }?,
    att.global.attributes,
    empty
  }
tei_reg =
  
  ## (regularization) contains a reading which has been regularized or normalized in some sense.
  element reg {
    tei_macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
tei_orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized
  ##         or corrected.
  element orig { tei_macro.paraContent, att.global.attributes, empty }
tei_gap =
  
  ## (gap) indicates a point where material has been omitted in a transcription, whether for editorial
  ##     reasons described in the TEI header, as part of sampling practice, or because the material is
  ##     illegible, invisible, or inaudible.
  element gap {
    tei_model.glossLike*,
    att.global.attributes,
    att.editLike.attributes,
    
    ## gives the reason for omission. Sample values include sampling,
    ##         inaudible, irrelevant, cancelled.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## in the case of text omitted from the transcription because of deliberate deletion by an
    ##         identifiable hand, signifies the hand which made the deletion.
    attribute hand { xsd:anyURI }?,
    
    ## In the case of text omitted because of damage, categorizes the cause of the damage, if
    ##         it can be identified.
    ## : 1] rubbing; 2] mildew; 3] smoke
    attribute agent { xsd:Name }?,
    empty
  }
tei_add =
  
  ## (addition) contains letters, words, or phrases inserted in the text by an
  ##         author, scribe, annotator, or corrector.
  element add {
    tei_macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.placement.attributes,
    att.typed.attributes,
    empty
  }
tei_del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as
  ##     superfluous or spurious in the copy text by an author, scribe, annotator, or corrector.
  element del {
    tei_macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    empty
  }
tei_unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed with certainty because it
  ##         is illegible or inaudible in the source.
  element unclear {
    tei_macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    
    ## indicates why the material is hard to transcribe.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## Where the difficulty in transcription arises from action (partial deletion, etc.)
    ##                 assignable to an identifiable hand, signifies the hand responsible for the action.
    attribute hand { xsd:anyURI }?,
    
    ## Where the difficulty in transcription arises from damage, categorizes the cause of
    ##                 the damage, if it can be identified.
    ## : 1] rubbing; 2] mildew; 3] smoke
    attribute agent { xsd:Name }?,
    empty
  }
tei_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase.
  element name {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
tei_rs =
  
  ## (referencing string) contains a general purpose name or referring string.
  element rs {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    
    ## indicates more specifically the object referred to by the referencing string.
    ##                 Values might include person, place, ship,
    ##                     element etc.
    attribute type { xsd:Name }?,
    empty
  }
tei_email =
  
  ## (electronic mail address) contains an e-mail address identifying a location to which
  ##         e-mail messages can be delivered.
  ##     
  element email { tei_macro.phraseSeq, att.global.attributes, empty }
tei_address =
  
  ## contains a postal  address, for example of a
  ##         publisher, an organization, or an individual.
  element address {
    (tei_model.global*, (tei_model.addrPart, tei_model.global*)+),
    att.global.attributes,
    empty
  }
tei_addrLine =
  
  ## (address line) contains one line of a postal address.
  element addrLine { tei_macro.phraseSeq, att.global.attributes, empty }
tei_street =
  
  ## a full street address including any name or number identifying a
  ##         building as well as the name of the street or route on which it is
  ##         located.
  element street { tei_macro.phraseSeq, att.global.attributes, empty }
tei_postCode =
  
  ## (postal code) contains a numerical or alphanumeric code used as part of a postal address to simplify
  ##         sorting or delivery of mail. 
  element postCode { text, att.global.attributes, empty }
tei_postBox =
  
  ## (postal box or post office box) contains a number or other identifier for some postal delivery
  ##         point other than a street address. 
  element postBox { text, att.global.attributes, empty }
tei_num =
  
  ## (number) contains a number, written in any form.
  element num {
    tei_macro.phraseSeq,
    att.global.attributes,
    
    ## indicates the type of numeric value.
    ## : 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## absolute number, e.g. 21, 21.5
      "cardinal"
      | 
        ## ordinal number, e.g. 21st
        "ordinal"
      | 
        ## fraction, e.g. one half or three-quarters
        "fraction"
      | 
        ## a percentage
        "percentage"
      | xsd:Name
    }?,
    
    ## supplies the value of the number in standard form.
    attribute value { xsd:double | xsd:decimal }?,
    empty
  }
tei_measure =
  
  ## contains a word or phrase referring to some quantity of an object or commodity, usually
  ##         comprising a number, a unit, and a commodity name.
  element measure {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.measurement.attributes,
    
    ## specifies the type of measurement in any convenient typology.
    attribute type { xsd:Name }?,
    empty
  }
tei_measureGrp =
  
  ## (measure group) contains a group of dimensional specifications which relate to the same object, for example
  ##     the height and width of a manuscript page.
  element measureGrp {
    (text | tei_model.gLike | tei_model.measureLike)*,
    att.global.attributes,
    att.measurement.attributes,
    att.typed.attributes,
    empty
  }
tei_date =
  
  ## contains a date in any format.
  element date {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global | tei_p)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    
    ## indicates the system or calendar to which the date represented by the content of this
    ##         element belongs.
    ## : 1] Gregorian; 2] Julian; 3] Islamic; 4] Hebrew; 5] Revolutionary; 6] Iranian; 7] Coptic; 8] Chinese
    attribute calendar {
      
      ## Gregorian calendar
      "Gregorian"
      | 
        ## Julian calendar
        "Julian"
      | 
        ## Islamic or Muslim (hijri) lunar calendar
        "Islamic"
      | 
        ## Hebrew or Jewish lunisolar calendar
        "Hebrew"
      | 
        ## French Revolutionary calendar
        "Revolutionary"
      | 
        ## Iranian or Persian (Jalaali) solar calendar
        "Iranian"
      | 
        ## Coptic or Alexandrian calendar
        "Coptic"
      | 
        ## Chinese lunisolar calendar
        "Chinese"
      | xsd:Name
    }?,
    empty
  }
tei_time =
  
  ## contains a phrase defining a time of day in any format.
  element time {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
tei_abbr =
  
  ## (abbreviation) contains an abbreviation of any sort.
  element abbr {
    tei_macro.phraseSeq,
    att.global.attributes,
    
    ## allows the encoder to classify the abbreviation according to some convenient
    ##                 typology.
    ## : 1] suspension; 2] contraction; 3] brevigraph; 4] superscription; 5] acronym; 6] title; 7] organization; 8] geographic
    attribute type { xsd:Name }?,
    empty
  }
tei_expan =
  
  ## (expansion) contains the expansion of an abbreviation.
  element expan {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    empty
  }
tei_ptr =
  
  ## (pointer) defines a pointer to another location.
  element ptr {
    empty,
    att.global.attributes,
    att.pointing.attributes,
    att.declaring.attributes,
    (
     ## specifies the destination of the pointer by supplying one or more URI References
     attribute target {
       list { xsd:anyURI+ }
     }
     | 
       ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference from a
       ##                 scheme defined in a refsDecl element in the TEI header
       attribute cRef {
         list {
           xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
         }
       }),
    empty
  }
tei_ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment.
  element ref {
    tei_macro.paraContent,
    att.global.attributes,
    att.pointing.attributes,
    att.declaring.attributes,
    
     ## specifies the destination of the reference by supplying one or more URI References
     attribute target {
       list { xsd:anyURI+ }
     }?
     , 
       ## (canonical reference) specifies the destination of the reference by supplying a canonical reference from
       ##                 a scheme defined in a refsDecl element in the TEI header
       attribute cRef {
         list {
           xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
         }
       }?,
    empty
  }
tei_list =
  
  ## (list) contains any sequence of items organized as a list.
  element list {
    ((tei_model.divTop | tei_model.global)*,
     ((tei_item, tei_model.global*)+
      | (tei_headLabel?,
         tei_headItem?,
         (tei_label, tei_model.global*, tei_item, tei_model.global*)+)),
     (tei_model.divBottom, tei_model.global*)*),
    att.global.attributes,
    
    ## describes the form of the list.
    ## : 1] ordered; 2] bulleted; 3] simple; 4] gloss
    [ a:defaultValue = "simple" ]
    attribute type {
      
      ## list items are numbered or lettered. 
      "ordered"
      | 
        ## list items are marked with a bullet or other typographic device. 
        "bulleted"
      | 
        ## list items are not numbered or bulleted. 
        "simple"
      | 
        ## each list item glosses some term or concept, which is given by a label element
        ##             preceding the list item.
        "gloss"
      | xsd:Name
    }?,
    empty
  }
tei_item =
  
  ## contains one component of a list.
  element item { tei_macro.specialPara, att.global.attributes, empty }

tei_label =  
	## contains the label associated with an item in a list; in glossaries, marks the term being
	##     defined.
	element label { 
		tei_macro.phraseSeq, 
		att.typed.attributes,
		att.global.attributes, 
		empty 
	}

tei_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list,
  ##     glossary, manuscript description, etc.
  element head {
    tei_macro.paraContent,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
tei_headLabel =
  
  ## (heading for list labels) contains the heading for the label or term column in a glossary list or similar structured
  ##         list.
  element headLabel {
    tei_macro.phraseSeq, att.global.attributes, empty
  }
tei_headItem =
  
  ## (heading for list items) contains the heading for the item or gloss column in a glossary list or similar structured
  ##         list.
  element headItem { tei_macro.phraseSeq, att.global.attributes, empty }
tei_note =
  
  ## contains a note or annotation.
  element note {
    tei_macro.specialPara,
    att.global.attributes,
    att.placement.attributes,
    
    ## describes the type of note.
    attribute ns1:provider { text }?,
    attribute ns1:note_key { text }?,
    attribute type { xsd:Name }?,
    attribute subtype { xsd:Name }?,
        
    ## indicates whether the copy text shows the exact place of reference for the note.
    [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?,
    
    ## indicates the point (or points) of attachment for a note, or the beginning of the span
    ##         to which the note is attached.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    
    ## points to the end of the span to which the note is attached, if the note is not embedded
    ##         in the text at that point.
    attribute targetEnd {
      list { xsd:anyURI+ }
    }?,
    empty
  }
tei_index =
  
  ## (index entry) marks a location to be indexed for whatever purpose.
  element index {
    (tei_term, tei_index?)*,
    att.global.attributes,
    att.spanning.attributes,
    
    ## supplies a name to specify which index (of several) the index entry belongs to.
    attribute indexName { xsd:Name }?,
    empty
  }
tei_graphic =
  
  ## indicates the location of an inline graphic, illustration, or figure.
  element graphic {
    empty,
    att.global.attributes,
    att.internetMedia.attributes,
    att.declaring.attributes,
    
    ## The display width of the image
    attribute width {
      xsd:token {
        pattern =
          "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
      }
    }?,
    
    ## The display height of the image
    attribute height {
      xsd:token {
        pattern =
          "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
      }
    }?,
    
    ## A scale factor to be applied to the image to make it the desired display size
    attribute scale { xsd:double | xsd:decimal }?,
    
    ## (uniform resource locator) A URL which refers to the image itself.
    attribute url { xsd:anyURI }?,
    empty
  }
tei_binaryObject =
  
  ## provides encoded binary data representing an inline graphic or other object.
  element binaryObject {
    text,
    att.global.attributes,
    att.internetMedia.attributes,
    
    ## The display width of the object
    attribute width {
      xsd:token {
        pattern =
          "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
      }
    }?,
    
    ## The display height of the object
    attribute height {
      xsd:token {
        pattern =
          "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
      }
    }?,
    
    ## A scale factor to be applied to the object to make it the desired display size
    attribute scale { xsd:double | xsd:decimal }?,
    
    ## The encoding used to encode the binary data. If not specified, this is assumed to be
    ##           Base64.
    attribute encoding {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
tei_milestone =
  
  ## marks a boundary point separating any kind of section of a text, typically but not
  ##     necessarily indicating a point at which some part of a standard reference system changes, where
  ##     the change is not represented by a structural element.
  element milestone {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.sourced.attributes,
    
    ## provides a conventional name for the kind of section changing at this milestone.
    ## : 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
    attribute unit {
      
      ## physical page breaks (synonymous with the pb element).
      "page"
      | 
        ## column breaks.
        "column"
      | 
        ## line breaks (synonymous with the lb element).
        "line"
      | 
        ## any units termed book, liber, etc.
        "book"
      | 
        ## individual poems in a collection.
        "poem"
      | 
        ## cantos or other major sections of a poem.
        "canto"
      | 
        ## changes of speaker or narrator.
        "speaker"
      | 
        ## stanzas within a poem, book, or canto.
        "stanza"
      | 
        ## acts within a play.
        "act"
      | 
        ## scenes within a play or act.
        "scene"
      | 
        ## sections of any kind.
        "section"
      | 
        ## passages not present in the reference edition.
        "absent"
      | 
        ## passages present in the text, but not to be included as part of the reference.
        "unnumbered"
      | xsd:Name
    },
    empty
  }
tei_pb =
  
  ## (page break) marks the boundary between one page of a text and the next in a standard reference system.
  element pb {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.sourced.attributes,
    empty
  }
tei_lb =
  
  ## (line break) marks the start of a new (typographic) line in some edition or version of a text.
  element lb {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.sourced.attributes,
    empty
  }
tei_cb =
  
  ## (column break) marks the boundary between one column of a text and the next
  ##         in a standard reference system.
  element cb {
    empty,
    att.global.attributes,
    att.typed.attributes,
    att.sourced.attributes,
    empty
  }
tei_analytic =
  
  ## (analytic level) contains bibliographic elements describing an item (e.g. an article or poem) published
  ##     within a monograph or journal and not as an independent publication.
  element analytic {
    (tei_author | tei_editor | tei_respStmt | tei_title)*,
    att.global.attributes,
    empty
  }
tei_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an
  ##     independent item (i.e. as a separate physical object).
  element monogr {
    ((((tei_author | tei_editor | tei_respStmt),
       (tei_author | tei_editor | tei_respStmt)*,
       tei_title+,
       (tei_idno | tei_editor | tei_respStmt)*)
      | (tei_title+,
         (tei_idno | tei_author | tei_editor | tei_respStmt)*))?,
     (tei_model.noteLike | tei_meeting)*,
     (tei_edition, (tei_idno | tei_editor | tei_respStmt)*)*,
     tei_imprint,
     (tei_imprint | tei_extent | tei_biblScope)*),
    att.global.attributes,
    empty
  }
tei_series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has
  ##         appeared.
  element series {
    (text
     | tei_model.gLike
     | tei_title
     | tei_editor
     | tei_respStmt
     | tei_biblScope
     | tei_model.global)*,
    att.global.attributes,
    empty
  }
tei_author =
  
  ## in a bibliographic reference, contains the name of the author(s), personal or corporate, of
  ##     a work; the primary statement of responsibility for any bibliographic item. 
  element author {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
tei_editor =
  
  ## secondary statement of responsibility for a bibliographic item, for example the name of an
  ##     individual, institution or organization, (or of several such) acting as editor, compiler,
  ##     translator, etc. 
  element editor {
    tei_macro.phraseSeq,
    att.global.attributes,
    
    ## specifies the nature of the intellectual responsibility
    [ a:defaultValue = "editor" ] attribute role { xsd:Name }?,
    empty
  }
tei_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition,
  ##     recording, or series, where the specialized elements for authors, editors, etc. do not suffice
  ##     or do not apply.
  element respStmt {
    ((tei_resp+, tei_model.nameLike.agent+)
     | (tei_model.nameLike.agent+, tei_resp+)),
    att.global.attributes,
    empty
  }
tei_resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility.
  element resp {
    tei_macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
tei_title =
  
  ## contains a title for any kind of work.
  element title {
    tei_macro.paraContent,
    att.global.attributes,
    att.canonical.attributes,
    
    ## indicates the bibliographic level for a title, that is, whether
    ##                                         it identifies an article, book, journal, series, or
    ##                                         unpublished material.
    attribute level {
      
      ## (analytic) analytic title (article, poem, or other item
      ##                                                   published as part of a larger item) 
      "a"
      | 
        ## (monographic) monographic title (book, collection, or
        ##                                                   other item published as a distinct item,
        ##                                                   including single volumes of multi-volume
        ##                                                   works) 
        "m"
      | 
        ## (journal) journal title 
        "j"
      | 
        ## (series) series title 
        "s"
      | 
        ## (unpublished) title of unpublished material (including
        ##                                                   theses and dissertations unless
        ##                                                   published by a commercial press)
        "u"
    }?,
    
    ## classifies the title according to some convenient typology.
    ## : 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type { xsd:Name }?,
    empty
  }
tei_meeting =
  
  ## contains the formalized descriptive title for a meeting or conference, for use in a
  ##     bibliographic description for an item derived from such a meeting, or as a heading or preamble
  ##     to publications emanating from it.
  element meeting {
    tei_macro.limitedContent, att.global.attributes, empty
  }
tei_imprint =
  
  ## groups information relating to the publication or distribution
  ##         of a bibliographic item.
  element imprint {
    ((tei_model.imprintPart | tei_model.dateLike), tei_model.global*)+,
    att.global.attributes,
    empty
  }
tei_publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a
  ##         bibliographic item.
  element publisher {
    tei_macro.phraseSeq, att.global.attributes, empty
  }
tei_biblScope =
  
  ## (scope of citation) defines the scope of a bibliographic reference, for example as a
  ##         list of page numbers, or a named subdivision of a larger work.
  element biblScope {
    tei_macro.phraseSeq,
    att.global.attributes,
    attribute from { text }?,
    attribute to { text }?,
    
    ## identifies the type of information conveyed by the element, e.g.
    ##                 columns, pages, volume.
    ## : 1] vol(volume) ; 2] issue; 3] pp(pages) ; 4] chap(chapter) ; 5] part
    attribute type {
      
      ## (volume) the element contains a volume number.
      "vol"
      | 
        ## the element contains an issue number, or volume and
        ##                         issue numbers.
        "issue"
      | 
        ## (pages) the element contains a page number or page range.
        "pp"
      | 
        ## (chapter) the element contains a chapter indication (number
        ##                         and/or title)
        "chap"
      | 
        ## the element identifies a part of a book or collection.
        "part"
      | xsd:Name
    }?,
    empty
  }
tei_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published.
  element pubPlace {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    empty
  }
tei_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may
  ##     not be explicitly tagged. 
  element bibl {
    (text
     | tei_bibl
     | tei_model.gLike
     | tei_model.highlighted
     | tei_model.pPart.data
     | tei_model.pPart.edit
     | tei_model.segLike
     | tei_model.ptrLike
     | tei_model.biblPart
     | tei_model.global)*,
    att.global.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    empty
  }
tei_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements
  ##     appear and in a specified order. 
  element biblStruct {
    (tei_analytic*,
     (tei_monogr, tei_series*)+,
     (tei_model.noteLike | tei_idno | tei_relatedItem)*),
    att.global.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    empty
  }
tei_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. 
  element listBibl {
    (tei_model.headLike*,
     (tei_model.biblLike | tei_model.milestoneLike | tei_listBibl)+),
    att.global.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    empty
  }
tei_relatedItem =
  
  ## contains or references some other bibliographic item which is related to the present one
  ##         in some specified manner, for example as a constituent or alternative version of it.
  element relatedItem {
    (tei_model.biblLike | tei_model.ptrLike),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
tei_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse.
  element l {
    (tei_macro.paraContent | tei_caesura)*,
    att.global.attributes,
    
    ## specifies whether or not the line is metrically complete. 
    [ a:defaultValue = "N" ]
    attribute part {
      
      ## (yes) the line is metrically incomplete
      "Y"
      | 
        ## (no) either the line is complete, or no claim is made as to its completeness
        "N"
      | 
        ## (initial) the initial part of an incomplete line
        "I"
      | 
        ## (medial) a medial part of an incomplete line
        "M"
      | 
        ## (final) the final part of an incomplete line
        "F"
    }?,
    empty
  }
tei_lg =
  
  ## (line group) contains a group of verse lines functioning as a formal unit, e.g. a stanza, refrain,
  ##         verse paragraph, etc.
  element lg {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.lLike | tei_lg),
     (tei_model.lLike | tei_lg | tei_model.global)*,
     (tei_model.divBottom, tei_model.global*)*),
    
    ##
    attribute ns1:place { text }?,
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }

tei_sp =
  ## (speech) The sp element is used here to record utterances in a dialog.
  element sp {
    (tei_model.global*,
     (tei_speaker, tei_model.global*)?,
     ((tei_model.lLike
       | tei_lg
       | tei_model.pLike
       | tei_model.listLike
       | tei_model.stageLike
       | tei_model.qLike),
      tei_model.global*)+),
    
    ## The type attribute is used here to.
    attribute ns1:type { text }?,
    att.global.attributes,
    att.ascribed.attributes,
    empty
  }

tei_speaker =
  
  ## A specialized form of heading or label, giving the name of one or more speakers in a
  ##         dramatic text or fragment.
  element speaker { tei_macro.phraseSeq, att.global.attributes, empty }
tei_stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or fragment.
  element stage {
    tei_macro.specialPara,
    att.global.attributes,
    
    ## indicates the kind of stage direction.
    ## : 1] setting; 2] entrance; 3] exit; 4] business; 5] novelistic; 6] delivery; 7] modifier; 8] location; 9] mixed
    attribute type {
      
      ## describes a setting.
      "setting"
      | 
        ## describes an entrance.
        "entrance"
      | 
        ## describes an exit.
        "exit"
      | 
        ## describes stage business.
        "business"
      | 
        ## is a narrative, motivating stage direction.
        "novelistic"
      | 
        ## describes how a character speaks.
        "delivery"
      | 
        ## gives some detail about a character.
        "modifier"
      | 
        ## describes a location.
        "location"
      | 
        ## more than one of the above
        "mixed"
      | xsd:Name
    }?,
    empty
  }
tei_teiCorpus =
  
  ## contains the whole of a TEI encoded corpus, comprising a single corpus header and one or
  ##         more TEI elements, each containing a single text header and a text.
  element teiCorpus {
    (tei_teiHeader, (tei_TEI | tei_teiCorpus)+),
    att.global.attributes,
    
    ## The version of the TEI scheme
    [ a:defaultValue = "5.0" ] attribute version { xsd:decimal }?,
    empty
  }
tei_divGen =
  
  ## (automatically generated text division) indicates the location at which a textual division generated
  ##         automatically by a text-processing application is to appear.
  element divGen {
    tei_model.headLike*,
    att.global.attributes,
    
    ## specifies what type of generated text division (e.g. index,
    ##                 table of contents, etc.) is to appear.
    ## : 1] index; 2] toc; 3] figlist; 4] tablist
    attribute type { xsd:Name }?,
    empty
  }
tei_model.headerPart = tei_encodingDesc | tei_profileDesc
tei_teiHeader =
  
  ## (TEI Header) supplies the descriptive and declarative information making
  ##	up an electronic title page prefixed to every TEI-conformant
  ##	text.
  element teiHeader {
    (tei_fileDesc, tei_model.headerPart*, tei_revisionDesc?),
    att.global.attributes,
    
    ## specifies the kind of document to which the header is
    ##       attached, for example whether it is a corpus or individual text.
    ## : 1] text; 2] corpus
    [ a:defaultValue = "text" ] attribute type { xsd:Name }?,
    empty
  }
tei_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic
  ## file.
  element fileDesc {
    ((tei_titleStmt,
      tei_editionStmt?,
      tei_extent?,
      tei_publicationStmt,
      tei_seriesStmt?,
      tei_notesStmt?),
     tei_sourceDesc+),
    att.global.attributes,
    empty
  }
tei_titleStmt =
  
  ## (title statement) groups information about the title of a work and those
  ## responsible for its intellectual content.
  element titleStmt {
    (tei_title+, tei_model.respLike*), att.global.attributes, empty
  }
tei_sponsor =
  
  ## specifies the name of a sponsoring organization or
  ## institution.
  element sponsor {
    tei_macro.phraseSeq.limited, att.global.attributes, empty
  }
tei_funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization
  ## responsible for the funding of a project or text.
  element funder {
    tei_macro.phraseSeq.limited, att.global.attributes, empty
  }
tei_principal =
  
  ## (principal researcher) supplies the name of the principal researcher responsible for the
  ## creation of an electronic text.
  element principal {
    tei_macro.phraseSeq.limited, att.global.attributes, empty
  }
tei_editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text.
  element editionStmt {
    (tei_model.pLike+ | (tei_edition, tei_respStmt*)),
    att.global.attributes,
    empty
  }
tei_edition =
  
  ## (edition) describes the particularities of one edition of a text.
  element edition { tei_macro.phraseSeq, att.global.attributes, empty }
tei_extent =
  
  ## describes the approximate size of a text as stored on
  ## some carrier medium, whether digital or non-digital, specified in any convenient units.
  element extent { tei_macro.phraseSeq, att.global.attributes, empty }
tei_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution
  ## of an electronic or other text. 
  element publicationStmt {
    (tei_model.pLike+ | tei_model.publicationStmtPart+),
    att.global.attributes,
    empty
  }
tei_distributor =
  
  ## supplies the name of a person or other agency responsible for the
  ## distribution of a text.
  element distributor {
    tei_macro.phraseSeq, att.global.attributes, empty
  }
tei_authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for
  ##   making an electronic file available, other than a publisher or
  ##   distributor.
  element authority {
    tei_macro.phraseSeq.limited, att.global.attributes, empty
  }
tei_idno =
  
  ## (identifying number) supplies any standard or non-standard number used to identify a
  ## bibliographic item.
  element idno {
    (text | tei_model.gLike | tei_idno)*,
    att.global.attributes,
    
    ## categorizes the number, for example as an ISBN or other
    ##          standard series.
    ##    
    attribute type { xsd:Name }?,
    empty
  }
tei_availability =
  
  ## supplies information about the availability of a text, for
  ##   example any restrictions on its use or distribution, its copyright
  ##   status, etc.
  element availability {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## supplies a code identifying the current availability of the
    ## text.
    ##    
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text is freely available.
      ##     
      "free"
      | 
        ## the status of the text is unknown.
        ##     
        "unknown"
      | 
        ## the text is not freely available.
        ##    
        "restricted"
    }?,
    empty
  }
tei_seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which
  ## a publication belongs.
  element seriesStmt {
    (tei_model.pLike+
     | (tei_title+, (tei_idno | tei_respStmt)*)),
    att.global.attributes,
    empty
  }
tei_notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text
  ## additional to that recorded in other parts of the bibliographic
  ## description.
  element notesStmt {
    tei_model.noteLike+, att.global.attributes, empty
  }
tei_model.sourceDescPart = notAllowed

tei_sourceDesc =
	## (source description) describes the source from
	## which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence.
	element sourceDesc {
		(
			tei_model.pLike+ 
			| 
			(
				tei_model.biblLike
				| tei_model.sourceDescPart
				| tei_model.listLike
			)+
		),
		att.global.attributes,
		att.declarable.attributes,
		empty
	}
  
tei_biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all
  ## components of the TEI file description
  ## are present.
  element biblFull {
    ((tei_titleStmt,
      tei_editionStmt?,
      tei_extent?,
      tei_publicationStmt,
      tei_seriesStmt?,
      tei_notesStmt?),
     tei_sourceDesc*),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_model.encodingPart =
  tei_projectDesc
  | tei_samplingDecl
  | tei_editorialDecl
  | tei_tagsDecl
  | tei_refsDecl
  | tei_classDecl
  | tei_appInfo
  | tei_geoDecl
  | tei_variantEncoding
  | tei_charDecl
tei_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the
  ## source or sources from which it was derived.
  element encodingDesc {
    (tei_model.encodingPart | tei_model.pLike)+,
    att.global.attributes,
    empty
  }
tei_projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic
  ## file was encoded, together with any other relevant information
  ## concerning the process by which it was assembled or collected.
  element projectDesc {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used
  ## in sampling texts in the creation of a corpus or collection.
  element samplingDecl {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_model.editorialDeclPart =
  tei_correction
  | tei_normalization
  | tei_quotation
  | tei_hyphenation
  | tei_segmentation
  | tei_stdVals
  | tei_interpretation
  | tei_punctuation

tei_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied
  ## during the encoding of a text.
  element editorialDecl {
    (tei_model.pLike+ | tei_model.editorialDeclPart+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_correction =
  
  ## (correction principles) states how and under what circumstances corrections have been
  ## made in the text.
  element correction {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text.
    ##    
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text has been thoroughly checked and
      ##                        proofread.
      ##     
      "high"
      | 
        ## the text has been checked at least once.
        ##     
        "medium"
      | 
        ## the text has not been checked.
        ##     
        "low"
      | 
        ## the correction status of the text is unknown.
        ##    
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the
    ##          text.
    ##    
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      ##     
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
tei_normalization =
  
  ## indicates the extent of normalization or regularization of the
  ## original source carried out in converting it to electronic form.
  element normalization {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indicates the authority for any normalization carried out.
    ##     
    attribute source { xsd:anyURI }?,
    
    ## indicates the method adopted to indicate normalizations within
    ##          the text.
    ##    
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalization made silently
      ##   
      "silent"
      | 
        ## normalization represented using markup
        ##    
        "markup"
    }?,
    empty
  }
tei_quotation =
  
  ## specifies editorial practice adopted with respect to quotation
  ##   marks in the original. 
  element quotation {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## (quotation marks) indicates whether or not quotation marks have been retained as
    ##       content within the text. 
    [ a:defaultValue = "all" ]
    attribute marks {
      
      ## no quotation marks have been retained 
      "none"
      | 
        ## some quotation marks have been retained 
        "some"
      | 
        ## all quotation marks have been retained 
        "all"
    }?,
    
    ## specifies how quotation marks are indicated within the
    ##       text.
    [ a:defaultValue = "unknown" ] attribute form { text }?,
    empty
  }
tei_hyphenation =
  
  ## summarizes the way in which hyphenation in a source text has been
  ## treated in an encoded version of it.
  element hyphenation {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been
    ##	retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained,
      ##                    even though the lineation of the original
      ##                    may not have been.
      ##    
      "all"
      | 
        ## end-of-line hyphenation has been retained in some
        ##                    cases.
        ##    
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed:
        ##                    any remaining end-od-line hyphenation should be retained.
        ##   
        "hard"
      | 
        ## all end-of-line hyphenation has been removed:
        ##                   any remaining hyphenation occurred within the line.
        ##    
        "none"
    }?,
    empty
  }
tei_segmentation =
  
  ## describes the principles according to which the text has been
  ## segmented, for example into sentences, tone-units, graphemic strata,
  ## etc.
  element segmentation {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_stdVals =
  
  ## (standard values) specifies the format used when standardized date or number
  ## values are supplied.
  element stdVals {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_interpretation =
  
  ## describes the scope of any analytic or interpretive information
  ## added to the text in addition to the transcription. 
  element interpretation {
    tei_model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_tagsDecl =
  
  ## (tagging declaration) provides detailed information about the tagging applied to a document.
  element tagsDecl {
    (tei_rendition*, tei_namespace*), att.global.attributes, empty
  }
tei_tagUsage =
  
  ## supplies information about the usage of a specific element
  ## within a text. 
  element tagUsage {
    tei_macro.limitedContent,
    att.global.attributes,
    
    ## (element name) the name (generic identifier) of the element indicated by
    ##       the tag.
    attribute gi { xsd:Name },
    
    ## specifies the number of occurrences of this element within the text.
    attribute occurs { xsd:nonNegativeInteger }?,
    
    ## (with unique identifier) specifies the number of occurrences of this element within
    ##       the text which bear a distinct value for the global
    ##       xml:id attribute. 
    attribute withId { xsd:nonNegativeInteger }?,
    
    ## specifies the identifier of a rendition element
    ##       which defines how this element is to be rendered.
    attribute render { xsd:anyURI }?,
    empty
  }
tei_namespace =
  
  ## supplies the formal name of the namespace to which the elements
  ## documented by its children belong. 
  element namespace {
    tei_tagUsage+,
    att.global.attributes,
    
    ## the full formal name of the namespace concerned.
    attribute name { xsd:anyURI },
    empty
  }
tei_rendition =
  
  ## supplies information about the rendition or appearance of one or more
  ## elements in the source text.
  element rendition {
    tei_macro.limitedContent,
    att.global.attributes,
    
    ## identifies the language used to describe the rendition.
    attribute scheme {
      
      ## Cascading Stylesheet Language
      "css"
      | 
        ## Extensible  Stylesheet Language
        ## Formatting Objects
        "xslfo"
      | 
        ## Informal free text description
        "free"
      | 
        ## A user-defined rendition description language
        "other"
    }?,
    empty
  }
tei_refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this
  ##   text.
  element refsDecl {
    (tei_model.pLike+ | tei_cRefPattern+ | tei_refState+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_cRefPattern =
  
  ## (canonical reference pattern) specifies an expression and replacement pattern for
  ##   transforming a canonical reference into a URI. 
  element cRefPattern {
    tei_model.pLike*,
    att.global.attributes,
    
    ## specifies a regular expression against which the values of
    ##       cRef attributes can be matched.
    attribute matchPattern { xsd:token },
    
    ## specifies a replacement pattern
    ##       which, once subpattern substitution has been performed, provides
    ##       a URI.
    attribute replacementPattern { text },
    empty
  }
tei_refState =
  
  ## (reference state) specifies one component of a canonical reference defined by
  ## the milestone method.
  element refState {
    empty,
    att.global.attributes,
    att.sourced.attributes,
    
    ## indicates what kind of state is changing at this milestone.
    ## : 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] stanza; 8] act; 9] scene; 10] section; 11] absent
    attribute unit {
      
      ## page breaks in the reference edition.
      ##     
      "page"
      | 
        ## column breaks.
        ##     
        "column"
      | 
        ## line breaks.
        ##     
        "line"
      | 
        ## any units termed book, liber, etc.
        ##     
        "book"
      | 
        ## individual poems in a collection.
        ##     
        "poem"
      | 
        ## cantos or other major sections of a poem.
        ##     
        "canto"
      | 
        ## stanzas within a poem, book, or canto.
        ##     
        "stanza"
      | 
        ## acts within a play.
        ##     
        "act"
      | 
        ## scenes within a play or act.
        ##     
        "scene"
      | 
        ## sections of any kind.
        ##     
        "section"
      | 
        ## passages not present in the reference edition.
        "absent"
      | xsd:Name
    },
    
    ## specifies the fixed length of the reference component.
    attribute length { xsd:nonNegativeInteger }?,
    
    ## (delimiter) supplies a delimiting string following the reference
    ##           component.
    attribute delim { text }?,
    empty
  }
tei_classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory
  ## codes used elsewhere in the text.
  element classDecl { tei_taxonomy+, att.global.attributes, empty }
tei_taxonomy =
  
  ## defines a typology used to classify texts either implicitly, by
  ## means of a bibliographic citation, or explicitly by a structured
  ## taxonomy.
  element taxonomy {
    (tei_model.glossLike*
     | tei_category+
     | (tei_model.biblLike, tei_category*)),
    att.global.attributes,
    empty
  }
tei_category =
  
  ## contains an individual descriptive category, possibly nested
  ## within a superordinate category, within a user-defined taxonomy.
  element category {
    ((tei_catDesc | tei_model.glossLike*), tei_category*),
    att.global.attributes,
    empty
  }
tei_catDesc =
  
  ## (category description) describes some category within a taxonomy
  ## or text typology, either in the form of a brief prose description
  ## or in terms of the situational parameters used by the TEI
  ## formal textDesc.
  element catDesc {
    (text | tei_model.limitedPhrase | tei_model.catDescPart)*,
    att.global.attributes,
    empty
  }
tei_appInfo =
  
  ## (application information) records information about an application which has
  ##   edited the TEI file. 
  element appInfo {
    tei_model.applicationLike+, att.global.attributes, empty
  }
tei_application =
  
  ## provides information about an application which has acted upon the document.
  element application {
    (tei_model.labelLike+, (tei_model.ptrLike* | tei_model.pLike*)),
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    
    ## Supplies an identifier for the application, independent of its version number or display
    ##         name.
    attribute ident { xsd:Name },
    
    ## Supplies a version number for the application, independent of its identifier or display
    ##         name.
    attribute version {
      xsd:token {
        pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}"
      }
    },
    empty
  }
tei_model.applicationLike = tei_application
tei_model.profileDescPart =
  tei_langUsage | tei_textClass | tei_handNotes
tei_profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a
  ## text, specifically the languages and sublanguages used, the situation in
  ## which it was produced, the participants and their setting.
  element profileDesc {
    (tei_creation?, tei_model.profileDescPart*),
    att.global.attributes,
    empty
  }
tei_handNote =
  
  ## (note on hand) describes a particular style
  ## or hand distinguished within a manuscript.
  element handNote {
    tei_macro.specialPara,
    att.global.attributes,
    att.handFeatures.attributes,
    empty
  }
tei_creation =
  
  ## contains information about the creation of a text.
  element creation {
    tei_macro.phraseSeq.limited, att.global.attributes, empty
  }
tei_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc.
  ## represented within a text.
  element langUsage {
    tei_language+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_language =
  
  ## characterizes a single language or sublanguage used within a
  ##   text.
  element language {
    tei_macro.phraseSeq.limited,
    att.global.attributes,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented
    ##       by this element, and which is referenced by the global xml:lang attribute.
    attribute ident { xsd:language },
    
    ## specifies the approximate percentage (by volume) of the
    ##       text which uses this language.
    ##       
    attribute usage {
      xsd:nonNegativeInteger { maxInclusive = "100" }
    }?,
    empty
  }
tei_textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text
  ## in terms of a standard classification scheme, thesaurus, etc.
  element textClass {
    (tei_classCode | tei_catRef | tei_keywords)*,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
tei_keywords =
  
  ## contains a list of keywords or phrases identifying the topic or
  ## nature of a text.
  element keywords {
    (tei_term+ | tei_list),
    att.global.attributes,
    
    ## identifies the controlled vocabulary within which the set of
    ##   keywords concerned is defined.
    ##    
    attribute scheme { xsd:anyURI },
    empty
  }
tei_classCode =
  
  ## (classification code) contains the classification code used for this text in some
  ## standard classification system.
  element classCode {
    tei_macro.phraseSeq.limited,
    att.global.attributes,
    
    ## identifies the classification system or taxonomy in use.
    attribute scheme { xsd:anyURI },
    empty
  }
tei_catRef =
  
  ## (category reference) specifies one or more defined categories
  ## within some taxonomy or text typology.
  element catRef {
    empty,
    att.global.attributes,
    
    ## identifies the categories concerned
    ##    
    attribute target {
      list { xsd:anyURI+ }
    },
    
    ## identifies the classification scheme within which the set of
    ##     categories concerned is defined
    ##    
    attribute scheme { xsd:anyURI }?,
    empty
  }
tei_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file.
  element revisionDesc {
    (tei_list | tei_change+), att.global.attributes, empty
  }
tei_change =
  
  ## summarizes a particular change or correction made
  ## to a particular version of an electronic text which is
  ## shared between several researchers.
  element change {
    (text
     | tei_model.limitedPhrase
     | tei_model.inter
     | tei_model.global)*,
    att.global.attributes,
    att.ascribed.attributes,
    
    ## supplies the date of the change in standard form, i.e. YYYY-MM-DD.
    attribute when {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    empty
  }
tei_geoDecl =
  
  ## (geographic coordinates declaration) documents the notation and the datum used for geographic
  ##   coordinates expressed as content of the geo element
  ##   elsewhere within the document.
  element geoDecl {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.declarable.attributes,
    
    ## supplies a commonly used code name for the datum employed.
    ## : 1] WGS84(World Geodetic System) ; 2] MGRS(Military Grid Reference System) ; 3] OSGB36(ordnance survey great britain) ; 4] ED50(European Datum coordinate system) 
    [ a:defaultValue = "WGS84" ]
    attribute datum {
      
      ## (World Geodetic System) a pair of numbers to be interpreted as latitude followed by longitude
      ##	  according to the World Geodetic System.
      "WGS84"
      | 
        ## (Military Grid Reference System) the values supplied are geospatial entity object codes,
        ##	based on  Universal Transverse Mercator coordinates
        "MGRS"
      | 
        ## (ordnance survey great britain) the value supplied is to be interpreted as a British National Grid
        ##	  Reference.
        "OSGB36"
      | 
        ## (European Datum coordinate system) the value supplied is to be interpreted as latitude followed by
        ##	  longitude according to the European Datum coordinate system.
        "ED50"
      | xsd:Name
    }?,
    empty
  }
tei_TEI =
  
  ## (TEI document) contains a single TEI-conformant document,
  ## comprising a TEI header and a text, either in isolation or as part of a
  ## teiCorpus element.
  element TEI {
    (tei_teiHeader,
     ((tei_model.resourceLike+, tei_text?) | tei_text))
    >> s:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> s:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    att.global.attributes,
    
    ## The version of the TEI scheme
    [ a:defaultValue = "5.0" ] attribute version { xsd:decimal }?,
    empty
  }
tei_text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or
  ##     drama, a collection of essays, a novel, a dictionary, or a corpus sample.
  element text {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    attribute ns1:behaviour { text }?,
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    empty
  }
tei_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter.
  element body {
    (tei_model.global*,
     (tei_model.divTop, (tei_model.global | tei_model.divTop)*)?,
     (tei_model.divGenLike,
      (tei_model.global | tei_model.divGenLike)*)?,
     ((tei_model.divLike, (tei_model.global | tei_model.divGenLike)*)+
      | (tei_model.div1Like,
         (tei_model.global | tei_model.divGenLike)*)+
      | ((tei_model.common, tei_model.global*)+,
         ((tei_model.divLike,
           (tei_model.global | tei_model.divGenLike)*)+
          | (tei_model.div1Like,
             (tei_model.global | tei_model.divGenLike)*)+)?)),
     (tei_model.divBottom, tei_model.global*)*),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
tei_group =
  
  ## contains the body of a composite text, grouping together a sequence of distinct texts (or
  ##     groups of such texts) which are regarded as a unit for some purpose, for example the collected
  ##     works of an author, a sequence of prose essays, etc.
  element group {
    ((tei_model.divTop | tei_model.global)*,
     ((tei_text | tei_group),
      (tei_text | tei_group | tei_model.global)*),
     tei_model.divBottom*),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
tei_floatingText =
  
  ## contains a single text of any kind, whether unitary or composite, which interrupts the text
  ##     containing it at any point and after which the surrounding text resumes.
  element floatingText {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    empty
  }
tei_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text.
  element ns1:div {
    (tei_mulu
     | tei_head
     | tei_byline
     | tei_lb
     | tei_lg
     | tei_pb
     | tei_p
     | tei_q
     | tei_div
     | tei_juan
     | tei_list
     | tei_listBibl
     | tei_event
     | tei_entry
     | tei_g
     | tei_trailer
     | tei_app
     | tei_anchor
     | tei_choice
     | tei_milestone
     | tei_note
     | tei_table
     | tei_tt
     | tei_docNumber
     | tei_dialog
     | tei_unclear
     | tei_quote
     | tei_macro.xtext)*,
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_div1 =
  
  ## (level-1 text division) contains a first-level subdivision of the front, body, or back of a text.
  element div1 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div2Like | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.div2Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_div2 =
  
  ## (level-2 text division) contains a second-level subdivision of the front, body, or back of a
  ##  text.
  element div2 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div3Like | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.div3Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_div3 =
  
  ## (level-3 text division) contains a third-level subdivision of the front, body, or back of a text.
  element div3 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div4Like | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.div4Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_div4 =
  
  ## (level-4 text division) contains a fourth-level subdivision of the front, body, or back of a text.
  element div4 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div5Like | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.div5Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_div5 =
  
  ## (level-5 text division) contains a fifth-level subdivision of the front, body, or back of a text.
  element div5 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div6Like | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.div6Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_div6 =
  
  ## (level-6 text division) contains a sixth-level subdivision of the front, body, or back of a text.
  element div6 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div7Like | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.div7Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_div7 =
  
  ## (level-7 text division) contains the smallest possible subdivision of the front, body or back of a text, larger than
  ##     a paragraph.
  element div7 {
    ((tei_model.divTop | tei_model.global)*,
     ((tei_model.common, tei_model.global*)+,
      (tei_model.divBottom, tei_model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    empty
  }
tei_trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text. 
  element trailer { tei_macro.phraseSeq, att.global.attributes, empty }
tei_byline =
  
  ## contains the primary statement of responsibility given for a work
  ## on its title page or at the head or end of the work.
  element byline {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_docAuthor
     | tei_model.global
     | tei_figure)*,
    
    ## The type attribute has been added to distinguish different
    ##                                     types of persons in the byline, for example those authors,
    ##                                     translators etc.
    attribute ns1:type { text }?,
    att.global.attributes,
    empty
  }
tei_dateline =
  
  ## contains a brief description of the place, date, time, etc. of production of a letter,
  ##     newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. 
  element dateline { tei_macro.phraseSeq, att.global.attributes, empty }
tei_argument =
  
  ## A formal list or prose description of the topics addressed by
  ##	a subdivision of a text.
  element argument {
    ((tei_model.global | tei_model.headLike)*,
     (tei_model.common, tei_model.global*)+),
    att.global.attributes,
    empty
  }
tei_epigraph =
  
  ## contains a quotation, anonymous or attributed, appearing at the start of a section or
  ##     chapter, or on a title page. 
  element epigraph {
    (tei_model.common | tei_model.global)*, att.global.attributes, empty
  }
tei_opener =
  
  ## groups together dateline, byline, salutation, and similar phrases appearing as a preliminary
  ##     group at the start of a division, especially of a letter.
  element opener {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_argument
     | tei_byline
     | tei_dateline
     | tei_epigraph
     | tei_salute
     | tei_signed
     | tei_model.global)*,
    att.global.attributes,
    empty
  }
tei_closer =
  
  ## groups together salutations, datelines, and similar phrases appearing as a final group at
  ##     the end of a division, especially of a letter.
  element closer {
    (text
     | tei_model.gLike
     | tei_signed
     | tei_dateline
     | tei_salute
     | tei_model.phrase
     | tei_model.global)*,
    att.global.attributes,
    empty
  }
tei_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other
  ##     division of a text, or the salutation in the closing of a letter, preface, etc.
  element salute { tei_macro.phraseSeq, att.global.attributes, empty }
tei_signed =
  
  ## (signature) contains the closing salutation, etc., appended to a foreword,
  ## dedicatory epistle, or other division of a text. 
  element signed { tei_macro.phraseSeq, att.global.attributes, empty }
tei_postscript =
  
  ## contains a postscript, e.g. to a letter.
  element postscript {
    (tei_model.common | tei_model.global)*, att.global.attributes, empty
  }
tei_titlePage =
  
  ## (title page) contains the title page of a text, appearing within the front or back matter. 
  element titlePage {
    (tei_model.global*,
     tei_model.titlepagePart,
     (tei_model.titlepagePart | tei_model.global)*),
    att.global.attributes,
    
    ## classifies the title page according to any convenient typology.
    attribute type { xsd:Name }?,
    empty
  }
tei_docTitle =
  
  ## (document title) contains the title of a document, including all its
  ## constituents, as given on a title page.
  element docTitle {
    (tei_model.global*, (tei_titlePart, tei_model.global*)+),
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
tei_titlePart =
  
  ## contains a subsection or division of the title of a work, as
  ## indicated on a title page.
  element titlePart {
    tei_macro.paraContent,
    att.global.attributes,
    
    ## specifies the role of this subdivision of the title.
    ## : 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    [ a:defaultValue = "main" ]
    attribute type {
      
      ## main title of the work
      ##         
      "main"
      | 
        ## (subordinate) subtitle  of the work
        ##         
        "sub"
      | 
        ## (alternate) alternative title  of the work
        ##         
        "alt"
      | 
        ## abbreviated form of title
        "short"
      | 
        ## (descriptive) descriptive paraphrase of the work 
        ##    
        "desc"
      | xsd:Name
    }?,
    empty
  }
tei_docAuthor =
  
  ## (document author) contains the name of the author of the document, as given on the
  ## title page (often but not always contained in a byline).
  element docAuthor {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
tei_imprimatur =
  
  ## contains a formal statement authorizing the publication of a work, sometimes required to
  ##     appear on a title page or its verso.
  element imprimatur {
    tei_macro.paraContent, att.global.attributes, empty
  }
tei_docEdition =
  
  ## (document edition) contains an edition statement as presented on a title page of a
  ## document.
  element docEdition {
    tei_macro.paraContent, att.global.attributes, empty
  }
tei_docImprint =
  
  ## (document imprint) contains the imprint statement (place and date of publication,
  ## publisher name), as given
  ## (usually) at the foot of a title page.
  element docImprint {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_pubPlace
     | tei_docDate
     | tei_publisher
     | tei_model.global)*,
    att.global.attributes,
    empty
  }
tei_docDate =
  
  ## (document date) contains the date of a document, as given
  ## (usually) on a title page.
  element docDate {
    tei_macro.phraseSeq,
    att.global.attributes,
    
    ## gives the value of the date in standard form, i.e. YYYY-MM-DD.
    attribute when {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    empty
  }
tei_front =
  
  ## (front matter) contains any prefatory matter (headers,
  ## title page, prefaces, dedications, etc.)
  ## found  at the start of a document, before the main body.
  element front {
    ((tei_model.frontPart | tei_model.pLike.front | tei_model.global)*,
     ((tei_model.div1Like,
       (tei_model.frontPart | tei_model.div1Like | tei_model.global)*)
      | (tei_model.divLike,
         (tei_model.frontPart
          | tei_model.divLike
          | tei_model.global)*))?,
     (tei_model.divBottomPart,
      (tei_model.divBottomPart | tei_model.global)*)?),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
tei_back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a text.
  element back {
    ((tei_model.frontPart | tei_model.pLike.front | tei_model.global)*,
     ((tei_model.div1Like,
       (tei_model.frontPart | tei_model.div1Like | tei_model.global)*)
      | (tei_model.divLike,
         (tei_model.frontPart
          | tei_model.divLike
          | tei_model.global)*))?,
     (tei_model.divBottomPart,
      (tei_model.divBottomPart | tei_model.global)*)?),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
tei_link =
  
  ## defines an association or hypertextual link
  ## among elements or passages, of some type
  ## not more precisely specifiable by other elements.
  element link {
    empty,
    att.global.attributes,
    att.pointing.attributes,
    
    ## specifies the identifiers of the elements or passages
    ##     to be linked or associated.
    ##  
    attribute targets {
      list { xsd:anyURI, xsd:anyURI+ }
    },
    empty
  }
tei_linkGrp =
  
  ## (link group) defines a collection of associations or hypertextual links.
  element linkGrp {
    (tei_link | tei_ptr)+,
    att.global.attributes,
    att.pointing.group.attributes,
    empty
  }
tei_ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as
  ## an anonymous container for phrase or inter level elements analogous to, but
  ## without the semantic baggage of, a paragraph.
  element ab {
    tei_macro.paraContent,
    att.global.attributes,
    att.typed.attributes,
    att.declaring.attributes,
    
    ## specifies whether or not the block is complete. 
    [ a:defaultValue = "N" ]
    attribute part {
      
      ## (yes) the block is incomplete
      "Y"
      | 
        ## (no) either the block is complete, or no claim is made as to its
        ## completeness
        "N"
      | 
        ## (initial) the initial part of an incomplete block
        "I"
      | 
        ## (medial) a medial part of an incomplete block
        "M"
      | 
        ## (final) the final part of an incomplete block
        "F"
    }?,
    empty
  }
tei_anchor =
  
  ## (anchor point) attaches an identifier to a
  ## point within a text, whether or not it corresponds with a textual
  ## element.
  element anchor {
    empty, att.global.attributes, att.typed.attributes, empty
  }
tei_seg =
  
  ## (arbitrary segment) represents any  segmentation of text below the
  ##   chunk level.
  element seg {
    tei_macro.paraContent,
    att.global.attributes,
    att.segLike.attributes,
    att.typed.attributes,
    empty
  }
tei_when =
  
  ## indicates a point in time either relative to other elements in the
  ## same timeline tag, or absolutely.
  element when {
    empty,
    att.global.attributes,
    
    ## supplies an absolute value for the time.
    attribute absolute {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    
    ## specifies the unit of time in which the  interval
    ## value is expressed, if this is not inherited from the parent timeline.
    ## : 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:Name
    }?,
    
    ## specifies the numeric portion of a time interval
    attribute interval {
      xsd:float { minExclusive = "0" }
      | "unknown"
    }?,
    
    ## identifies the reference point for determining the time of the
    ## current when element, which is obtained by adding the interval to the
    ## time of the reference point.
    attribute since { xsd:anyURI }?,
    empty
  }
tei_timeline =
  
  ## (timeline) provides a set of ordered points in time which can be linked to
  ## elements of a spoken text to create a temporal alignment of that text.
  element timeline {
    tei_when+,
    att.global.attributes,
    
    ## designates the origin of the timeline, i.e. the time at which it
    ## begins.
    attribute origin { xsd:anyURI },
    
    ## specifies the unit of time corresponding to the
    ##	interval value of the timeline or of its
    ##	constituent points in time.
    ## : 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:Name
    }?,
    
    ## specifies the numeric portion of a time interval
    attribute interval {
      xsd:float { minExclusive = "0" }
      | "regular"
      | "irregular"
    }?,
    empty
  }
tei_join =
  
  ## identifies a possibly fragmented segment of text, by pointing
  ## at the possibly discontiguous elements which compose it.
  element join {
    tei_model.glossLike*,
    att.global.attributes,
    att.pointing.attributes,
    
    ## specifies the identifiers of the elements or passages
    ##        to be joined into a virtual
    ##        element.
    attribute targets {
      list { xsd:anyURI, xsd:anyURI+ }
    },
    
    ## specifies the name of an element
    ## which this aggregation
    ## may be understood to represent.
    attribute result { xsd:Name }?,
    
    ## indicates whether the targets to be joined include the
    ## entire element indicated (the entire subtree including its root),
    ## or just the children of the target (the branches of the subtree).
    [ a:defaultValue = "root" ]
    attribute scope {
      
      ## the rooted subtrees indicated by the targets
      ## attribute are joined, each subtree become a child of the virtual
      ## element created by the join
      "root"
      | 
        ## the children of the subtrees indicated by the
        ## targets attribute become the children of the virtual element
        ## (i.e. the roots of the subtrees are discarded)
        "branches"
    }?,
    empty
  }
tei_joinGrp =
  
  ## (join group) groups a collection of join elements and possibly
  ##   pointers.
  element joinGrp {
    (tei_model.glossLike*, (tei_join | tei_ptr)+),
    att.global.attributes,
    att.pointing.group.attributes,
    
    ## describes the result of the joins gathered in this collection.
    attribute result { xsd:Name }?,
    empty
  }
tei_alt =
  
  ## (alternation) identifies an alternation or a set of choices among elements or passages.
  element alt {
    empty,
    att.global.attributes,
    att.pointing.attributes,
    
    ## specifies the identifiers of the alternative elements or passages.
    attribute targets {
      list { xsd:anyURI, xsd:anyURI+ }
    },
    
    ## states whether the alternations gathered in this collection are exclusive or inclusive.
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that
      ##		  at most one of the alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that
        ##		  one or more of the alternatives occur.
        "incl"
    }?,
    
    ## If mode is , each weight
    ##       states the probability that the corresponding alternative
    ##       occurs. If mode is incl each weight states
    ##       the probability that the corresponding alternative occurs given
    ##       that at least one of the other alternatives occurs.
    attribute weights {
      list {
        xsd:double { minInclusive = "0" maxInclusive = "1" },
        xsd:double { minInclusive = "0" maxInclusive = "1" }+
      }
    }?,
    empty
  }
tei_altGrp =
  
  ## (alternation group) groups a collection of alt elements and possibly
  ## pointers.
  element altGrp {
    (tei_alt | tei_ptr)*,
    att.global.attributes,
    att.pointing.group.attributes,
    
    ## states whether the alternations gathered in this collection are
    ## exclusive or inclusive.
    [ a:defaultValue = "excl" ]
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that at
      ## most one of the alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that
        ## one or more of the alternatives occur.
        "incl"
    }?,
    empty
  }
att.global.linking.attributes =
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select
att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current
  ##       element in some way.
  attribute corresp {
    list { xsd:anyURI+ }
  }?
att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current
  ##       element.
  attribute synch {
    list { xsd:anyURI+ }
  }?
att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current
  ##       element.
  attribute sameAs { xsd:anyURI }?
att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a
  ##	copy.
  attribute copyOf { xsd:anyURI }?
att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which
  ##       the current element is part.
  attribute next { xsd:anyURI }?
att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of
  ##       which the current element is part.
  attribute prev { xsd:anyURI }?
att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation
  ##       with the current element.
  attribute exclude {
    list { xsd:anyURI+ }
  }?
att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is
  ##       selected, the ambiguity or uncertainty is marked as resolved. If
  ##       more than one alternant is selected, the degree of ambiguity or
  ##       uncertainty is marked as reduced by the number of alternants not
  ##       selected.
  attribute select {
    list { xsd:anyURI+ }
  }?
att.pointing.attributes =
  att.pointing.attribute.type, att.pointing.attribute.evaluate
att.pointing.attribute.type =
  
  ## categorizes the pointer in some respect, using any
  ##       convenient set of categories.
  attribute type { xsd:Name }?
att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a
  ##       pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then
    ##	  the target of that pointer will be taken, and so on, until
    ##	  an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then
      ##	  its target (whether a pointer or not) is taken as the target
      ##	  of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out
      ##	  beyond that needed to find the element specified in the
      ##	  pointer's target.
      "none"
  }?
att.pointing.group.attributes =
  att.pointing.attributes,
  att.pointing.group.attribute.domains,
  att.pointing.group.attribute.targFunc
att.pointing.group.attribute.domains =
  
  ## optionally specifies the identifiers of the elements
  ##       within which all elements indicated by the contents of this
  ##       element lie.
  attribute domains {
    list { xsd:Name+ }
  }?
att.pointing.group.attribute.targFunc =
  
  ## (target function) describes the function of each of the values of the
  ##       targets attribute of the enclosed link,
  ##       join, or alt tags.
  attribute targFunc {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
tei_model.rdgLike = tei_rdg
tei_app =
  
  ## (apparatus entry) contains one entry in a critical apparatus, with an optional
  ## lemma and at least one reading.
  element app {
    (tei_model.global*,
     (tei_lem, tei_model.global*, (tei_wit, tei_model.global*)?)?,
     ((tei_model.rdgLike,
       tei_model.global*,
       (tei_wit, tei_model.global*)?)
      | (tei_rdgGrp,
         tei_model.global*,
         (tei_wit, tei_model.global*)?))*),
    
    ##
    attribute ns1:word-count { text }?,
    
    ## classifies the variation contained in this element according to
    ## some convenient typology.
    attribute type { xsd:Name }?,
    
    ## identifies the beginning of the lemma in the base text, if
    ## necessary.
    attribute from { xsd:anyURI }?,
    
    ## identifies the endpoint of the lemma in the base text, if
    ## necessary.
    attribute to { xsd:anyURI }?,
    
    ## (location) indicates the location of the variation, when the
    ## location-referenced method of apparatus markup is used.
    attribute loc {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    att.global.attributes,
    empty
  }
tei_lem =
  
  ## (lemma) contains the lemma, or base text, of a textual variation.
  element lem {
    (text
     | tei_caesura
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    att.global.attributes,
    att.textCritical.attributes,
    attribute ns1:provider { text }?,
    empty
  }
tei_rdg =
  
  ## (reading) contains a single reading within a textual variation.
  element rdg {
    (text
     | tei_caesura
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    att.global.attributes,
    att.textCritical.attributes,
    attribute ns1:provider { text }?,
    empty
  }
tei_rdgGrp =
  
  ## (reading group) within a textual variation,
  ## groups two or more readings perceived to have a genetic
  ## relationship or other affinity.
  element rdgGrp {
    ((tei_rdgGrp, tei_wit?)
     | ((tei_lem, tei_wit?)?, (tei_model.rdgLike, tei_wit?))*)+,
    att.global.attributes,
    att.textCritical.attributes,
    empty
  }
tei_witDetail =
  
  ## (witness detail) gives further information about a particular witness, or
  ## witnesses, to a particular reading.
  element witDetail {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.placement.attributes,
    
    ## indicates the identifier for the reading, or readings, to which
    ## the witness detail refers.
    attribute target {
      list { xsd:anyURI+ }
    },
        
    ## (witnesses) indicates the sigil or sigla for the witnesses to which the
    ## detail refers.
    attribute wit {
      list { xsd:anyURI+ }
    },
    
    ## describes the type of information given about the witness.
    attribute type { xsd:Name }?,
    empty
  }
tei_wit =
  
  ## contains a list of one or more sigla of witnesses attesting a
  ## given reading, in a textual variation.
  element wit {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.rdgPart.attributes,
    empty
  }
tei_listWit =
  
  ## (witness list) lists definitions for all the witnesses referred to by a critical
  ##   apparatus, optionally grouped hierarchically.
  element listWit {
    (tei_model.headLike?, (tei_witness | tei_listWit)+),
    att.global.attributes,
    empty
  }
tei_witness =
  
  ## contains either a description of a single witness referred to
  ## within the critical apparatus, or a list of witnesses which is to be
  ## referred to by a single sigil.
  element witness {
    tei_macro.limitedContent, att.global.attributes, empty
  }
tei_witStart =
  
  ## (fragmented witness start) indicates the beginning, or resumption, of the text of a
  ## fragmentary witness.
  element witStart {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
tei_witEnd =
  
  ## (fragmented witness end) indicates the end, or suspension, of the text of a fragmentary
  ## witness.
  element witEnd {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
tei_lacunaStart =
  
  ## indicates the beginning of a lacuna in the text of a mostly
  ## complete textual witness.
  element lacunaStart {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
tei_lacunaEnd =
  
  ## indicates the end of a lacuna in a mostly complete textual
  ## witness.
  element lacunaEnd {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
tei_variantEncoding =
  
  ## declares the method used to encode text-critical variants.
  element variantEncoding {
    empty,
    att.global.attributes,
    
    ## indicates which method is used to encode the apparatus of
    ## variants.
    attribute method {
      
      ## apparatus uses line numbers or other canonical reference scheme
      ## referenced in a base text.
      "location-referenced"
      | 
        ## apparatus indicates the precise locations of the beginning and
        ## ending of each lemma relative to a base text.
        "double-end-point"
      | 
        ## alternate readings of a passage are given in parallel in the
        ## text; no notion of a base text is necessary.
        "parallel-segmentation"
    },
    
    ## indicates whether the apparatus appears within the running text
    ## or external to it.
    attribute location {
      
      ## apparatus appears within the running text.
      "internal"
      | 
        ## apparatus appears outside the base text.
        "external"
    },
    empty
  }

# 2014.3.11 周邦信: CBETA 決定允許 lem, rdg 下可以有 head, note, app, choice, p, cb:div, lg, l , lb, list
tei_model.rdgPart =
  # tei_wit | tei_witStart | tei_witEnd | tei_lacunaStart | tei_lacunaEnd
  tei_wit | tei_witStart | tei_witEnd | tei_lacunaStart | tei_lacunaEnd | tei_lg | tei_model.divLike | tei_head | tei_item | tei_l | tei_p
  
att.rdgPart.attributes = att.rdgPart.attribute.wit
att.rdgPart.attribute.wit =
  
  ## (witness or witnesses) contains a list of one or more sigla indicating the witnesses
  ## which begin or end at this point.
  attribute wit {
    list { xsd:anyURI+ }
  }?
att.textCritical.attributes =
  att.textCritical.attribute.wit,
  att.textCritical.attribute.type,
  att.textCritical.attribute.cause,
  att.textCritical.attribute.varSeq,
  att.textCritical.attribute.hand

att.textCritical.attribute.wit =
  
  ## (witness or witnesses) contains a list of one or more pointers indicating the witnesses
  ## which attest to a given reading.
  attribute wit {
    list { xsd:anyURI+ }
  }?
att.textCritical.attribute.type =
  
  ## classifies the reading according to some useful typology.
  ## : 1] substantive; 2] orthographic
  attribute type { xsd:Name }?
att.textCritical.attribute.cause =
  
  ## classifies the cause for the variant reading, according to
  ## any appropriate typology of possible origins.
  ## : 1] homeoteleuton; 2] homeoarchy; 3] paleographicConfusion; 4] haplography; 5] dittography; 6] falseEmendation
  attribute cause { xsd:Name }?
att.textCritical.attribute.varSeq =
  
  ## (variant sequence) provides a number indicating the position of this reading in a
  ## sequence, when there is reason to presume a sequence to the variants
  ## on any one lemma.
  attribute varSeq { xsd:nonNegativeInteger }?
att.textCritical.attribute.resp =
  
  ## (responsible party) identifies the editor responsible for asserting a
  ##	particular reading in the witness.
  attribute resp { xsd:anyURI }?
att.textCritical.attribute.hand =
  
  ## signifies the hand responsible for a particular reading in the
  ## witness.
  attribute hand { xsd:anyURI }?
tei_facsimile =
  
  ## contains a representation of some written source in the form of
  ## a set of images rather than as transcribed or encoded text.
  element facsimile {
    (tei_front?, (tei_model.graphicLike | tei_surface)+, tei_back?),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
att.global.facs.attributes = att.global.facs.attribute.facs
att.global.facs.attribute.facs =
  
  ## (facsimile) points to all or part of an image which corresponds with
  ##       the content of the element.
  attribute facs {
    list { xsd:anyURI+ }
  }?
tei_surface =
  
  ## defines a written surface in terms of a rectangular
  ## coordinate space, optionally  grouping one or more graphic representations of
  ## that space, and rectangular zones of interest
  ## within it.
  element surface {
    (tei_model.glossLike*, tei_model.graphicLike*, tei_zone*),
    att.global.attributes,
    att.coordinated.attributes,
    att.declaring.attributes,
    
    ## points to an element which encodes the starting position of the text corresponding to the
    ## inscribed part of the surface.
    attribute start { xsd:anyURI }?,
    empty
  }
att.coordinated.attributes =
  att.coordinated.attribute.ulx,
  att.coordinated.attribute.uly,
  att.coordinated.attribute.lrx,
  att.coordinated.attribute.lry
att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a
  ## rectangular space.
  attribute ulx { xsd:double | xsd:decimal }?
att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a
  ## rectangular space.
  attribute uly { xsd:double | xsd:decimal }?
att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a
  ## rectangular space.
  attribute lrx { xsd:double | xsd:decimal }?
att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a
  ## rectangular space.
  attribute lry { xsd:double | xsd:decimal }?
tei_zone =
  
  ## defines a rectangular area contained within a surface
  ## element. 
  element zone {
    (tei_model.glossLike*, tei_model.graphicLike*),
    att.global.attributes,
    att.coordinated.attributes,
    empty
  }
tei_addSpan =
  
  ## (added span of text) marks the beginning of a longer sequence of text added by an
  ##   author, scribe, annotator or corrector (see also add).
  element addSpan {
    empty
    >> s:pattern [
         name = "spanTo_required"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           s:assert [
             test = "@spanTo"
             "The spanTo= attribute of "
             s:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    att.placement.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
tei_damage =
  
  ## contains an area of damage to the text witness.
  element damage {
    tei_macro.paraContent,
    att.global.attributes,
    att.typed.attributes,
    att.damaged.attributes,
    empty
  }
tei_damageSpan =
  
  ## (damaged span of text) marks the beginning of a longer sequence of text which is
  ##   damaged in some way but still legible.
  element damageSpan {
    empty
    >> s:pattern [
         name = "spanTo_required_for_damageSpan"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           s:assert [
             test = "@spanTo"
             "The spanTo= attribute of "
             s:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.damaged.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
tei_delSpan =
  
  ## (deleted span of text) marks the beginning of a longer sequence of text deleted,
  ## marked as deleted, or otherwise signaled as superfluous or spurious by an
  ## author, scribe, annotator, or corrector.
  element delSpan {
    empty
    >> s:pattern [
         name = "spanTo_required_for_delSpan"
         "\x{a}" ~
         "            "
         s:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           s:assert [
             test = "@spanTo"
             "The spanTo= attribute of "
             s:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
tei_ex =
  
  ## (editorial expansion) contains a sequence of letters added by an editor or
  ##   transcriber when expanding an abbreviation.
  element ex {
    tei_macro.xtext,
    att.global.attributes,
    att.editLike.attributes,
    empty
  }
tei_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or
  ##   similar material appearing on the current page.
  element fw {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.placement.attributes,
    
    ## classifies the material encoded according to some useful typology.
    ## : 1] header; 2] footer; 3] pageNum(page number) ; 4] lineNum(line number) ; 5] sig(signature) ; 6] catch(catchword) 
    attribute type { xsd:Name }?,
    empty
  }
tei_handNotes =
  
  ## contains one or more handNote elements documenting the
  ## different hands identified within the source texts.
  element handNotes { tei_handNote+, att.global.attributes, empty }
tei_handShift =
  
  ## marks the beginning of a sequence of text written in a new
  ## hand, or the beginning of a scribal stint.
  element handShift {
    empty,
    att.global.attributes,
    att.handFeatures.attributes,
    
    ## identifies the new hand.
    attribute new { xsd:anyURI }?,
    
    empty
  }
tei_am =
  
  ## (abbreviation marker) contains a sequence of letters or signs present in an
  ##   abbreviation which are omitted or replaced in the expanded form of
  ##   the abbreviation.
  element am {
    tei_macro.xtext,
    att.global.attributes,
    att.editLike.attributes,
    empty
  }
tei_restore =
  
  ## indicates restoration of text to an earlier state by
  ## cancellation of an editorial or authorial marking or instruction.
  element restore {
    tei_macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    empty
  }
tei_space =
  
  ## indicates the location of a significant space in the copy text.
  element space {
    empty,
    att.global.attributes,
    att.dimensions.attributes,
    
    ## (dimension) indicates whether the space is horizontal or vertical.
    attribute dim {
      
      ## the space is horizontal.
      "horizontal"
      | 
        ## the space is vertical.
        "vertical"
    }?,
    
    empty
  }
tei_subst =
  
  ## (substitution) groups one or more deletions with one or more additions when
  ##   the combination is to be regarded as a single intervention in the text.
  element subst {
    (tei_model.pPart.transcriptional, tei_model.pPart.transcriptional+),
    att.global.attributes,
    att.transcriptional.attributes,
    empty
  }
tei_supplied =
  
  ## signifies text supplied by the transcriber or editor for any
  ##   reason, typically because the original cannot be read because of
  ##   physical damage or loss to the original.
  element supplied {
    tei_macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    
    ## indicates why the text has had to be supplied.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
tei_table =
  
  ## contains text displayed in tabular form, in rows and columns.
  element table {
    ((tei_model.headLike | tei_model.global)*,
     (tei_row, tei_model.global*)+),
    att.global.attributes,
    
    ## indicates the number of rows in the table.
    attribute rows { xsd:nonNegativeInteger }?,
    
    ## (columns) indicates the number of columns in each row of the table.
    attribute cols { xsd:nonNegativeInteger }?,
    empty
  }
tei_row =
  
  ## contains one row of a table. 
  element row {
   (tei_cell | tei_lb | tei_pb)+,
    att.global.attributes,
    att.tableDecoration.attributes,
    empty
  }
tei_cell =
  
  ## contains one cell of a table. 
  element cell {
    tei_macro.paraContent,
    att.global.attributes,
    att.tableDecoration.attributes,
    (text | tei_p | tei_lb)+,
    empty
  }
tei_formula =
  
  ## contains a mathematical or other formula.
  element formula {
    (text | tei_model.graphicLike | tei_model.hiLike | tei_lb)*,
    att.global.attributes,
    
    ## supplies the name of a previously defined notation used for the content of the element.
    attribute notation { xsd:anyURI }?,
    empty
  }
tei_figure =
  
  ## groups elements representing or containing graphic information such as an illustration or
  ##     figure.
  element figure {
    (tei_model.headLike
     | tei_model.pLike
     | tei_figDesc
     | tei_model.graphicLike
     | tei_model.egLike
     | tei_floatingText
     | tei_figure
     | tei_model.global)*,
    att.global.attributes,
    att.placement.attributes,
    empty
  }
tei_figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content
  ## of a graphic figure, for use when documenting an image without
  ## displaying it.
  element figDesc {
    tei_macro.limitedContent, att.global.attributes, empty
  }
tei_g =
  
  ## (character or glyph) represents a non-standard character or glyph.
  element g {
    text,
    att.global.attributes,
    att.typed.attributes,
    
    ## points to a description of the  character or glyph intended.
    attribute ref { xsd:anyURI }?,
    empty
  }

tei_caesura =

  element caesura {
    att.global.attributes,
    empty
  }

tei_char =
  
  ## (character) provides descriptive information about a character. 
  element char {
    (tei_charName?,
     tei_model.glossLike*,
     tei_charProp*,
     tei_mapping*,
     tei_model.graphicLike*,
     tei_model.noteLike*),
    att.global.attributes,
    empty
  }
tei_charName =
  
  ## (character name) contains the name of a character, expressed following Unicode conventions. 
  element charName { text, att.global.attributes, empty }
tei_charProp =
  
  ## (character property) provides a name and value for some property of the parent
  ## character or glyph. 
  element charProp {
    ((tei_unicodeName | tei_localName), tei_value),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
tei_charDecl =
  
  ## (character declarations) provides information about nonstandard characters and glyphs. 
  element charDecl {
    (tei_desc?, (tei_char | tei_glyph)+),
    att.global.attributes,
    empty
  }
tei_glyph =
  
  ## (character glyph) provides descriptive information about a character glyph. 
  element glyph {
    (tei_glyphName?,
     tei_model.glossLike*,
     tei_charProp*,
     tei_mapping*,
     tei_model.graphicLike*,
     tei_model.noteLike*),
    att.global.attributes,
    empty
  }
tei_glyphName =
  
  ## (character glyph name) contains the name of a glyph, expressed following Unicode
  ## conventions for character names. 
  element glyphName { text, att.global.attributes, empty }
tei_localName =
  
  ## (locally-defined property name) contains a locally defined name for some property. 
  element localName { text, att.global.attributes, empty }
tei_mapping =
  
  ## (character mapping) contains one or more
  ##	 characters which are related to the parent character or glyph
  ##	 in some respect, as specified by the type
  ##	 attribute.
  ##
  element mapping {
    tei_macro.xtext,
    
    ## the Unicode codepoint integer value in decimal notation, this
    ##                                     makes processing with XSLT easier
    attribute ns1:dec { xsd:integer }?,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
tei_unicodeName =
  
  ## (unicode property name) contains the name of a registered Unicode normative or
  ## informative property. 
  element unicodeName {
    text,
    att.global.attributes,
    
    ## specifies the version number of the Unicode Standard in
    ##         which this property name is defined.
    attribute version { xsd:double | xsd:decimal }?,
    empty
  }
tei_value =
  
  ## (value) contains a single value for some property, attribute, or other
  ##   analysis.
  element value { tei_macro.xtext, att.global.attributes, empty }
tei_model.entryLike = tei_superEntry | tei_entry | tei_entryFree
att.entryLike.attributes =
  att.entryLike.attribute.type, att.entryLike.attribute.sortKey
att.entryLike.attribute.type =
  
  ## indicates type of entry, in dictionaries with multiple types.
  ## : 1] main; 2] hom(homograph) ; 3] xref(cross reference) ; 4] affix; 5] abbr(abbreviation) ; 6] supplemental; 7] foreign
  [ a:defaultValue = "main" ]
  attribute type {
    
    ## a main entry (default).
    "main"
    | 
      ## (homograph) groups information relating to one homograph within an entry.
      "hom"
    | 
      ## (cross reference) a reduced entry whose only function is to
      ## point to another main entry (e.g. for forms of an irregular verb or
      ## for variant spellings: was pointing to
      ## be, or esthete to
      ## aesthete).
      "xref"
    | 
      ## an entry for a prefix, infix, or suffix.
      "affix"
    | 
      ## (abbreviation) an entry for an abbreviation.
      "abbr"
    | 
      ## a supplemental entry (for use in dictionaries which
      ##           issue supplements to their main work in which they include
      ##           updated information about entries).
      "supplemental"
    | 
      ## an entry for a foreign word in a monolingual dictionary.
      "foreign"
    | xsd:Name
  }?
att.entryLike.attribute.sortKey =
  
  ## contains a (sortable) character sequence reflecting the
  ##       entry's alphabetical position in the printed dictionary.
  attribute sortKey {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.lexicographic.attributes =
  att.lexicographic.attribute.expand,
  att.lexicographic.attribute.norm,
  att.lexicographic.attribute.split,
  att.lexicographic.attribute.value,
  att.lexicographic.attribute.orig,
  att.lexicographic.attribute.location,
  att.lexicographic.attribute.mergedIn,
  att.lexicographic.attribute.opt
att.lexicographic.attribute.expand =
  
  ## gives an expanded form of information presented more concisely in the dictionary
  attribute expand { text }?
att.lexicographic.attribute.norm =
  
  ## (normalized) gives a normalized form of information given by the source text in a
  ##                 non-normalized form
  attribute norm { text }?
att.lexicographic.attribute.split =
  
  ## gives the list of split values for a merged form
  attribute split { text }?
att.lexicographic.attribute.value =
  
  ## gives a value which lacks any realization in the printed source text.
  attribute value { text }?
att.lexicographic.attribute.orig =
  
  ## (original) gives the original string or is the empty string when the element does not appear
  ##                 in the source text.
  attribute orig { text }?
att.lexicographic.attribute.location =
  
  ## provides a reference to an anchor element elsewhere in the document
  ##                 indicating the original location of this component.
  attribute location { xsd:anyURI }?
att.lexicographic.attribute.mergedIn =
  
  ## gives a reference to another element, where the original appears as a merged form.
  attribute mergedIn { xsd:anyURI }?
att.lexicographic.attribute.opt =
  
  ## (optional) indicates whether the element is optional or not
  [ a:defaultValue = "false" ] attribute opt { xsd:boolean }?
tei_superEntry =
  
  ## groups successive entries for a set of homographs.
  element superEntry {
    ((tei_form?, tei_entry+) | tei_dictScrap),
    att.global.attributes,
    att.entryLike.attributes,
    empty
  }
tei_entry =
  
  ## contains a reasonably well-structured dictionary entry.
  element entry {
    (tei_hom | tei_sense | tei_model.entryPart.top | tei_model.global)+,
    
    ##
    attribute ns1:place { text }?,
    att.global.attributes,
    att.entryLike.attributes,
    empty
  }
tei_entryFree =
  
  ## (unstructured entry) contains a dictionary entry which does not necessarily conform to the constraints imposed
  ##         by the entry element.
  element entryFree {
    (text
     | tei_model.gLike
     | tei_model.entryPart
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global)*,
    att.global.attributes,
    att.entryLike.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_hom =
  
  ## (homograph) groups information relating to one homograph within an entry.
  element hom {
    (tei_sense | tei_model.entryPart.top | tei_model.global)*,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_sense =
  
  ## groups together all information relating to one word sense in
  ##   a dictionary entry, for example 
  ##     definitions, examples, and translation equivalents.
  element sense {
    (text
     | tei_model.gLike
     | tei_sense
     | tei_model.entryPart.top
     | tei_model.phrase
     | tei_model.global)*,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## gives the nesting depth of this sense.
    attribute level { xsd:double | xsd:decimal }?,
    empty
  }
tei_dictScrap =
  
  ## (dictionary scrap) encloses a part of a dictionary entry in which other phrase-level dictionary elements are
  ##         freely combined.
  element dictScrap {
    (text
     | tei_model.gLike
     | tei_model.entryPart
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global)*,
    att.global.attributes,
    empty
  }
tei_form =
  
  ## (form information group) groups all the information on the written and spoken forms of one headword.
  element form {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.formPart
     | tei_model.global)*,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## classifies form as simple, compound, etc.
    ## : 1] simple; 2] lemma; 3] variant; 4] compound; 5] derivative; 6] inflected; 7] phrase
    attribute type {
      
      ## single free lexical item
      "simple"
      | 
        ## the headword itself
        "lemma"
      | 
        ## a variant form
        "variant"
      | 
        ## word formed from simple lexical items
        "compound"
      | 
        ## word derived from headword
        "derivative"
      | 
        ## word in other than usual dictionary form
        "inflected"
      | 
        ## multiple-word lexical item
        "phrase"
      | xsd:Name
    }?,
    empty
  }
tei_orth =
  
  ## (orthographic form) gives the orthographic form of a dictionary headword.
  element orth {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## gives the type of spelling.
    attribute type { xsd:Name }?,
    
    ## gives the extent of the orthographic information provided.
    ## : 1] full(full form) ; 2] pref(prefix) ; 3] suff(suffix) ; 4] part(partial) 
    [ a:defaultValue = "full" ] attribute extent { xsd:Name }?,
    empty
  }
tei_pron =
  
  ## (pronunciation) contains the pronunciation(s) of the word.
  element pron {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## indicates whether the pronunciation is for whole word or part. 
    ## : 1] full(full form) ; 2] pref(prefix) ; 3] suff(suffix) ; 4] part(partial) 
    [ a:defaultValue = "full" ] attribute extent { xsd:Name }?,
    
    ## indicates what notation is used for the pronunciation, if more than one occurs in
    ##                 the machine-readable dictionary. 
    attribute notation { xsd:Name }?,
    empty
  }
tei_hyph =
  
  ## (hyphenation) contains a hyphenated form of a dictionary headword, or hyphenation information in some
  ##         other form.
  element hyph {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_syll =
  
  ## (syllabification) contains the syllabification of the headword.
  element syll {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_stress =
  
  ## contains the stress pattern for a dictionary headword, if given separately.
  element stress { tei_macro.paraContent, att.global.attributes, empty }
tei_gram =
  
  ## (grammatical information) within an entry in a dictionary or a terminological data file, contains grammatical
  ##         information relating to a term, word, or form.
  element gram {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## classifies the grammatical information given according to
    ##       some convenient typology   — in the case of terminological information, preferably the dictionary of      data element types specified in ISO WD 12 620.
    ## : 1] pos(part of speech) ; 2] gen(gender) ; 3] num(number) ; 4] animate; 5] proper
    attribute type { xsd:Name }?,
    empty
  }
tei_gen =
  
  ## (gender) identifies the morphological gender of a lexical item, as given in the dictionary.
  element gen {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_number =
  
  ## indicates grammatical number associated with a form, as given in a dictionary.
  element number {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_case =
  
  ## contains grammatical case information given by a dictionary for a given form.
  element case {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_per =
  
  ## (person) contains an indication of the grammatical person (1st, 2nd, 3rd, etc.) associated with a
  ##     given inflected form in a dictionary.
  element per {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_tns =
  
  ## (tense) indicates the grammatical tense associated with a given inflected form in a dictionary.
  element tns {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_mood =
  
  ## contains information about the grammatical mood of verbs (e.g. indicative, subjunctive,
  ##     imperative).
  element mood {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_iType =
  
  ## (inflectional class) indicates the inflectional class associated with a lexical item.
  element iType {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## indicates the type of indicator used to specify the inflection class, when it is
    ##                 necessary to distinguish between the usual abbreviated indications (e.g.
    ##                     inv) and other kinds of indicators, such as special codes
    ##                 referring to conjugation patterns, etc.
    ## : 1] abbrev; 2] verbTable
    attribute type { xsd:Name }?,
    empty
  }
tei_model.morphLike =
  tei_gram
  | tei_gen
  | tei_number
  | tei_case
  | tei_per
  | tei_tns
  | tei_mood
  | tei_iType
tei_model.gramPart =
  tei_model.morphLike
  | tei_gramGrp
  | tei_pos
  | tei_subc
  | tei_colloc
  | tei_usg
  | tei_lbl
tei_model.formPart =
  tei_form
  | tei_orth
  | tei_pron
  | tei_hyph
  | tei_syll
  | tei_model.gramPart
tei_gramGrp =
  
  ## (grammatical information group) groups morpho-syntactic information about a lexical item, e.g. pos, gen, number, case, or
  ##         iType (inflectional class).
  element gramGrp {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.gramPart
     | tei_model.global)*,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_pos =
  
  ## (part of speech) indicates the part of speech assigned to a dictionary 
  ## headword  such as noun, verb, or adjective.
  ##     
  element pos {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_subc =
  
  ## (subcategorization) contains subcategorization information (transitive/intransitive, countable/non-countable,
  ##         etc.)
  element subc {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_colloc =
  
  ## (collocate) contains a collocate of the headword.
  element colloc {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    att.typed.attributes,
    empty
  }
tei_def =
  
  ## (definition) contains definition text in a dictionary entry.
  element ns1:def {
    (tei_model.common | tei_model.global)*, att.global.attributes, empty
  }
tei_etym =
  
  ## (etymology) encloses the etymological information in a dictionary entry.
  element etym {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_usg
     | tei_lbl
     | tei_def
     | tei_model.morphLike
     | tei_xr
     | tei_model.global)*,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_lang =
  
  ## (language name) name of a language mentioned in etymological or other linguistic discussion.
  element lang {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_usg =
  
  ## (usage) contains usage information in a dictionary entry.
  element usg {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## classifies the usage information using any convenient typology.
    ## : 1] geo(geographic) ; 2] time; 3] dom(domain) ; 4] reg(register) ; 5] style; 6] plev(preference level) ; 7] lang(language) ; 8] gram(grammatical) ; 9] syn(synonym) ; 10] hyper(hypernym) ; 11] colloc(collocation) ; 12] comp(complement) ; 13] obj(object) ; 14] subj(subject) ; 15] verb; 16] hint
    attribute type { xsd:Name }?,
    empty
  }
tei_lbl =
  
  ## (label) contains a label for a form, example, translation, or other piece of
  ##         information, e.g. abbreviation for, contraction of, literally, approximately, synonyms:,
  ##         etc.
  element lbl {
    tei_macro.paraContent,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## classifies the label using any convenient typology.
    attribute type { xsd:Name }?,
    empty
  }
tei_xr =
  
  ## (cross-reference phrase) contains a phrase, sentence, or icon referring the reader to
  ## some other location in this or another text.
  element xr {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_usg
     | tei_lbl
     | tei_model.global)*,
    att.global.attributes,
    att.lexicographic.attributes,
    
    ## indicates the type of cross reference, using any convenient
    ## typology.
    ## : 1] syn(synonym) ; 2] etym(etymological) ; 3] cf(compare or consult) ; 4] illus(illustration) 
    attribute type { xsd:Name }?,
    empty
  }
tei_re =
  
  ## (related entry) contains a dictionary entry for a lexical item related to the headword, such as a compound
  ##         phrase or derived form, embedded inside a larger entry.
  element re {
    (text
     | tei_model.gLike
     | tei_sense
     | tei_model.entryPart.top
     | tei_model.phrase
     | tei_model.global)*,
    att.global.attributes,
    att.lexicographic.attributes,
    att.typed.attributes,
    empty
  }
tei_model.ptrLike.form = tei_oRef | tei_oVar | tei_pRef | tei_pVar
att.ptrLike.form.attributes = att.ptrLike.form.attribute.target
att.ptrLike.form.attribute.target =
  
  ## identifies the orthographic form or pronunciation referred to.
  attribute target { xsd:anyURI }?
tei_oRef =
  
  ## (orthographic-form reference) in a dictionary example, indicates a reference to the orthographic form(s) of the headword.
  element oRef {
    empty,
    att.global.attributes,
    att.ptrLike.form.attributes,
    att.lexicographic.attributes,
    
    ## indicates the kind of typographic modification made to the headword in the reference.
    ## : 1] cap(capital) ; 2] noHyph(no hyphen) 
    attribute type { xsd:Name }?,
    empty
  }
tei_oVar =
  
  ## (orthographic-variant reference) in a dictionary example, indicates a reference to variant orthographic form(s) of the
  ##     headword.
  element oVar {
    (text | tei_model.gLike | tei_oRef)*,
    att.global.attributes,
    att.ptrLike.form.attributes,
    att.lexicographic.attributes,
    
    ## indicates the kind of variant involved.
    ## : 1] pt(past tense) ; 2] pp(past participle) ; 3] prp(present participle) ; 4] f(feminine) ; 5] pl(plural) 
    attribute type { xsd:Name }?,
    empty
  }
tei_pRef =
  
  ## (pronunciation reference) in a dictionary example, indicates a reference to the pronunciation(s) of the headword.
  element pRef {
    empty,
    att.global.attributes,
    att.ptrLike.form.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_pVar =
  
  ## (pronunciation-variant reference) in a dictionary example, indicates a reference to variant pronunciation(s) of the headword.
  element pVar {
    (text | tei_model.gLike | tei_pRef)*,
    att.global.attributes,
    att.ptrLike.form.attributes,
    att.lexicographic.attributes,
    empty
  }
tei_orgName =
  
  ## (organization name) contains an organizational name. 
  element orgName {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
tei_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including any
  ##     or all of the person's forenames, surnames, honorifics, added names, etc.
  element persName {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
tei_surname =
  
  ## contains a family (inherited) name, as opposed to a given,
  ## baptismal, or nick name.
  element surname {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
tei_forename =
  
  ## contains a forename, given or baptismal name.
  element forename {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
tei_genName =
  
  ## (generational name component) contains a name component used to distinguish otherwise similar names on the basis of the
  ##     relative ages or generations of the persons named.
  element genName {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
tei_nameLink =
  
  ## (name link) contains a connecting phrase or link used within a name but not regarded as part of it, such as van der or
  ##             of.
  element nameLink {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
tei_addName =
  
  ## (additional name) contains an additional name component, such as a nickname, epithet, or alias, or any other descriptive phrase used within a personal
  ##     name.
  element addName {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
tei_roleName =
  
  ## contains a name component which indicates that the referent has a particular role or
  ##         position in society, such as an official title or rank.
  element roleName {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
tei_placeName =
  
  ## contains an absolute or relative place name. 
  element placeName {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    empty
  }
tei_bloc =
  
  ## (bloc) contains the name of a geo-political unit consisting of two or more nation states or
  ##     countries.
  element bloc {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
tei_country =
  
  ## (country) contains the name of a geo-political unit, such as a nation, country, colony, or
  ##     commonwealth, larger than or administratively superior to a region and smaller than a bloc.
  element country {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
tei_region =
  
  ## contains the name of an administrative unit such as a state, province, or county, larger
  ##     than a settlement, but smaller than a country.
  element region {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
tei_district =
  
  ## contains the name of any kind of subdivision of a settlement, such as a parish, ward, or
  ##     other administrative or geographic unit.
  element district {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
tei_settlement =
  
  ## contains the name of a settlement such as a city, town, or village identified as a single
  ##     geo-political or administrative unit.
  element settlement {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
tei_offset =
  
  ## that part of a relative temporal or spatial expression which indicates the direction of
  ##         the offset between the two place names, dates, or times involved in the expression. 
  element offset {
    tei_macro.xtext, att.global.attributes, att.typed.attributes, empty
  }
tei_geogName =
  
  ## (geographical name) a name associated with some geographical feature such as Windrush Valley or Mount Sinai.
  element geogName {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    
    ## provides more culture- linguistic- or application- specific information used to
    ##         categorize this name component.
    attribute type { xsd:Name }?,
    empty
  }
tei_geogFeat =
  
  ## (geographical feature name) contains a common noun identifying some geographical feature contained within a geographic
  ##         name, such as valley, mount, etc.
  element geogFeat {
    tei_macro.xtext,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
tei_affiliation =
  
  ## (affiliation) contains an informal description of a person's present or past affiliation with some
  ##         organization, for example an employer or sponsor.
  element affiliation {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
tei_age =
  
  ## (age) specifies the age of a person.
  element age {
    tei_macro.phraseSeq.limited,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    
    ## supplies a numeric code representing the age or age group
    attribute value { xsd:nonNegativeInteger }?,
    empty
  }
tei_birth =
  
  ## (birth) contains information about a person's birth, such as its date and place.
  element birth {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
tei_climate =
  
  ## (climate) contains information about the physical climate of a place.
  element climate {
    (tei_model.headLike*,
     (tei_model.pLike+ | tei_model.labelLike+),
     (tei_model.noteLike | tei_model.biblLike)*,
     tei_climate*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
tei_death =
  
  ## (death) contains information about a person's death, such as its date and place.
  element death {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
tei_education =
  
  ## contains a description of the educational experience of a person.
  element education {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
tei_event =
  
  ## (event) contains data relating to any kind of significant event associated with a person, place, or
  ##     organization.
  element ns1:event {
    (tei_model.headLike*,
     (tei_model.dateLike+ | tei_model.labelLike+),
     (tei_model.global
      | tei_model.pLike
      | tei_model.noteLike
      | tei_model.biblLike | tei_list)*,
     tei_event*),
    (tei_model.headLike*,
     (tei_model.pLike
      | tei_model.labelLike
      | tei_model.noteLike
      | tei_model.biblLike | tei_list )*,
     tei_event*),
    
    ## indicates the location of an event by pointing to a place element
    attribute where { xsd:anyURI }?,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    att.naming.attributes,
   (tei_date | tei_p | tei_lg | tei_lb | tei_pb | tei_byline)*,
    empty
  }
tei_faith =
  
  ## specifies the faith, religion, or belief set of a person.
  element faith {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    empty
  }
tei_floruit =
  
  ## contains information about a person's period of activity.
  element floruit {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    empty
  }
tei_geo =
  
  ## (geographical coordinates) contains any expression of a set of geographic coordinates, representing a point, line, or
  ##         area on the surface of the earth in some notation.
  element geo { text, att.global.attributes, empty }
tei_langKnowledge =
  
  ## (language knowledge) summarizes the state of a person's linguistic knowledge, either as prose or by a list of
  ##       langKnown elements.
  element langKnowledge {
    (tei_model.pLike | tei_langKnown+),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    
    ## supplies one or more valid language tags for the languages specified
    attribute tags {
      list { xsd:language+ }
    }?,
    empty
  }
tei_langKnown =
  
  ## (language known) summarizes the state of a person's linguistic competence, i.e., knowledge of a single
  ##     language.
  element langKnown {
    tei_macro.phraseSeq.limited,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    
    ## supplies a valid language tag for the language concerned.
    attribute tag { xsd:language },
    
    ## a code indicating the person's level of knowledge for this language 
    attribute level {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
tei_listOrg =
  
  ## (list of organizations) contains a list of elements, each of which provides information about an identifiable
  ##         organization. 
  element listOrg {
    (tei_model.headLike*,
     (tei_org | tei_listOrg)+,
     (tei_relationGrp | tei_relation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    empty
  }
tei_listEvent =
  
  ##  (list of events) contains a list of descriptions, each of which provides
  ##   information about an identifiable event. 
  element listEvent {
    (tei_model.headLike*,
     (tei_event | tei_listEvent)+,
     (tei_relation | tei_relationGrp)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    empty
  }
tei_listPerson =
  
  ## (list of persons) contains a list of descriptions, each of which provides information about an identifiable
  ##     person or a group of people, for example the participants in a language interaction, or the
  ##     people referred to in a historical source. 
  element listPerson {
    (tei_model.headLike*,
     (tei_model.personLike | tei_listPerson)+,
     (tei_relation | tei_relationGrp)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    empty
  }
tei_listPlace =
  
  ## (list of places) contains a list of places, optionally followed by a list of relationships (other than
  ##         containment) defined amongst them. 
  element listPlace {
    (tei_model.headLike*,
     (tei_model.placeLike | tei_listPlace)+,
     (tei_relationGrp | tei_relation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    empty
  }
tei_location =
  
  ## defines the location of a place as a set of geographical coordinates, in terms of a other named geo-political entities, or as an
  ##         address.
  element location {
    (tei_model.labelLike
     | tei_model.placeNamePart
     | tei_model.offsetLike
     | tei_model.measureLike
     | tei_model.addressLike
     | tei_model.noteLike
     | tei_model.biblLike)*,
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    empty
  }
tei_nationality =
  
  ## contains an informal description of a person's present
  ## or past nationality or citizenship.
  element nationality {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    empty
  }
tei_occupation =
  
  ## contains an informal description of a person's trade, profession or occupation.
  element occupation {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    
    ## identifies the classification system or taxonomy in use by supplying the
    ##                 identifier of a taxonomy element elsewhere in the header.
    attribute scheme { xsd:anyURI }?,
    
    ## identifies an occupation code defined within the classification system or taxonomy
    ##                 defined by the scheme attribute.
    attribute code { xsd:anyURI }?,
    empty
  }
tei_org =
  
  ## (organization) provides information about an identifiable organization such as a business, a tribe, or
  ##         any other grouping of people.
  element org {
    (tei_model.headLike*,
     (tei_model.pLike*
      | (tei_model.labelLike
         | tei_model.nameLike
         | tei_model.placeLike)*),
     (tei_model.noteLike | tei_model.biblLike)*,
     tei_model.personLike*),
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    
    ## specifies a primary role or classification for the organization.
    attribute role {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
tei_relationGrp =
  
  ## (relation group) provides information about relationships identified amongst people, places, and
  ##     organizations, either informally as prose or as formally expressed relation links. 
  element relationGrp {
    (tei_model.pLike+ | tei_relation+),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
tei_person =
  
  ## provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a
  ##     historical source.
  element person {
    (tei_model.pLike+ | (tei_model.personPart | tei_model.global)*),
    att.global.attributes,
    att.editLike.attributes,
    
    ## specifies a primary role or classification for the person.
    attribute role {
      list { xsd:Name+ }
    }?,
    
    ## specifies the sex of the person.
    attribute sex { "0" | "1" | "2" | "9" }?,
    
    ## specifies an age group for the person.
    attribute age { xsd:Name }?,
    empty
  }
tei_personGrp =
  
  ## (personal group) describes a group of individuals treated as a single person for analytic purposes.
  element personGrp {
    (tei_model.pLike+ | tei_model.personPart*),
    att.global.attributes,
    
    ## specifies the role of this group of participants in the interaction.
    attribute role { xsd:Name }?,
    
    ## specifies the sex of the participant group.
    attribute sex { ("0" | "1" | "2" | "9") | "mixed" }?,
    
    ## specifies the age group of the participants.
    attribute age { xsd:Name }?,
    
    ## specifies the size or approximate size of the group.
    attribute size {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
tei_place =
  
  ## contains data about a geographic location
  element place {
    (tei_model.headLike*,
     (tei_model.pLike*
      | (tei_model.labelLike
         | tei_model.placeStateLike
         | tei_model.placeTraitLike
         | tei_model.placeEventLike)*),
     (tei_model.noteLike | tei_model.biblLike)*,
     (tei_model.placeLike | tei_listPlace)*),
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    empty
  }
tei_population =
  
  ## contains information about the population of a place.
  element population {
    (tei_model.headLike*,
     ((tei_model.pLike+ | tei_model.labelLike+),
      (tei_model.noteLike | tei_model.biblLike)*)?,
     tei_population*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
tei_relation =
  
  ## (relationship) describes any kind of relationship or linkage amongst a specified
  ## group of participants.
  element relation {
    tei_desc?,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    
    ## categorizes the relationship in some respect, e.g.
    ## as social, personal or other.
    ## : 1] social; 2] personal; 3] other
    [ a:defaultValue = "personal" ]
    attribute type {
      
      ## relationship concerned with social roles
      "social"
      | 
        ## relationship concerned with personal roles, e.g.
        ## kinship, marriage, etc.
        "personal"
      | 
        ## other kinds of relationship
        "other"
      | xsd:Name
    }?,
    
    ## supplies a name for the kind of  relationship of which
    ##	this is an instance.
    attribute name { xsd:Name },
    
    ## identifies the passive participants in a non-mutual
    ## relationship.
    attribute passive {
      list { xsd:anyURI+ }
    }?,
    (
     ## identifies the active participants in a non-mutual
     ## relationship, or all the participants in a mutual one.
     attribute active {
       list { xsd:anyURI+ }
     }?
     | 
       ## supplies a list of participants amongst all of whom the relationship holds equally.
       attribute mutual {
         list { xsd:anyURI+ }
       }?),
    empty
  }
tei_residence =
  
  ## (residence) describes a person's present or past places of residence.
  element residence {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    empty
  }
tei_sex =
  
  ## specifies the sex of a person.
  element sex {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    
    ##
    attribute value { "0" | "1" | "2" | "9" }?,
    empty
  }
tei_socecStatus =
  
  ## (socio-economic status) contains an informal description of a person's perceived social or
  ## economic status.
  element socecStatus {
    tei_macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    
    ## identifies the classification system or taxonomy in use.
    attribute scheme { xsd:anyURI }?,
    
    ## identifies a status code defined within the
    ## classification system or taxonomy defined by the source
    ## attribute.
    attribute code { xsd:anyURI }?,
    empty
  }
tei_state =
  
  ## contains a description of some status or quality
  ## attributed to a person, place, or organization at some specific time.
  element state {
    (tei_state+
     | (tei_model.headLike*,
        tei_model.pLike+,
        (tei_model.noteLike | tei_model.biblLike)*)
     | (tei_model.labelLike
        | tei_model.noteLike
        | tei_model.biblLike)*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    att.naming.attributes,
    empty
  }
tei_terrain =
  
  ## contains information about the physical terrain of a place.
  element terrain {
    (tei_model.headLike*,
     (tei_model.pLike+ | tei_model.labelLike+),
     (tei_model.noteLike | tei_model.biblLike)*,
     tei_terrain*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
tei_trait =
  
  ## contains a description of some culturally-determined and in
  ##   principle unchanging characteristic attributed to a person or place .
  element trait {
    (tei_trait+
     | (tei_model.headLike*,
        tei_model.pLike+,
        (tei_model.noteLike | tei_model.biblLike)*)
     | (tei_model.labelLike
        | tei_model.noteLike
        | tei_model.biblLike)*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
tei_nym =
  
  ## (canonical name) contains the definition for a canonical name or namepart of any kind.
  element nym {
    (tei_model.entryPart*, tei_model.pLike*, tei_nym*),
    att.global.attributes,
    att.typed.attributes,
    
    ## points to constituent nyms 
    
    ## Sorry, unable to create schema that uses actual counts minOccurs=1 and maxOccurs=100; approximating to minOccurs=1 and maxOccurs=unbounded.
    attribute parts {
      list { xsd:anyURI, xsd:anyURI* }
    }?,
    empty
  }
tei_listNym =
  
  ## (list of canonical names) contains a list of nyms, that is, standardized names for any thing. 
  element listNym {
    (tei_model.headLike*,
     (tei_nym | tei_listNym)+,
     (tei_relationGrp | tei_relation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    empty
  }
tei_model.persNamePart =
  tei_surname
  | tei_forename
  | tei_genName
  | tei_nameLink
  | tei_addName
  | tei_roleName
att.datable.iso.attributes =
  att.datable.iso.attribute.when-iso,
  att.datable.iso.attribute.notBefore-iso,
  att.datable.iso.attribute.notAfter-iso,
  att.datable.iso.attribute.from-iso,
  att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g.
  ##                 yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g.
  ##                 yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_dTitle =
  
  ## A specialization of the docTitle element. This should be used only
  ##                             once per document, usually as direct child of the body element
  element ns1:dTitle { tei_macro.phraseSeq, empty }
tei_docNumber =
  
  ## The number of the document
  element ns1:docNumber { tei_macro.phraseSeq, empty }
tei_dialog =
  
  ##
  element ns1:dialog {
    (tei_model.divPart | tei_model.milestoneLike)*,
    
    ##
    attribute type { text }?,
    empty
  }
tei_mulu =
  
  ##  (mulu for table of contents) This element gives the items as they should appear in the table of contents.  All content of this element has been added to the text and is not found in the copy text.  It usually appears shortly after the start of a division.
  element ns1:mulu {
    tei_macro.phraseSeq,
    
    ##
    attribute type { text }?,
    
    ## Indicates the nesting level of the division in question.
    attribute level { text }?,
    
    ## Number or some other label.
    attribute n { text }?,
    empty
  }
tei_juan =
  
  ##
  element ns1:juan {
    (tei_mulu | tei_note | tei_jhead | tei_macro.phraseSeq | tei_figure)*,
    att.global.attributes,
    
    ##  ((function) of the element here, that is at the beginning or the end of the juan) 
    attribute fun {
      
      ##  (opener) 
      "open"
      | 
        ##  (closer) 
        "close"
    }?,
    
    ##
    attribute place { text }?,
    empty
  }
tei_jhead =
  
  ## Specialized head element used at the start of a scroll.
  element ns1:jhead {
    (tei_macro.phraseSeq | tei_tt | tei_label | tei_note)*,
    
    ##
    attribute type { text }?,
    empty
  }
tei_tt =
  
  ## Container element for parallel <t> elements
  element ns1:tt {
    tei_macro.phraseSeq,
    tei_t*,
    
    ##
    attribute type { text }?,
    
    ##
    attribute word-count { text }?,
    
    ##
    attribute from { text }?,
    
    ##
    attribute to { text }?,
    
    ##
    attribute rend { text }?,
    
    ##
    attribute place { text }?,
    empty
  }

# 2014.3.14 CBETA 修改, 允許 t 下有 l
tei_t =  
  ## Element for parallel t elements (used to mark parallel Chinese and
  ##                             Sanskrit passages)
  element ns1:t {
    (tei_macro.paraContent | tei_l)*,
    att.global.attributes,
    tei_yin*,
    
    ##
    attribute place { text }?,
    
    empty
  }
tei_fan =
  
  ## A container element for a sound gloss in fanqie notation. The
  ##                             character to be annotated is zi, the sound gloss is
  ##                             yin. 
  element ns1:fan { (tei_zi, tei_yin)*, empty }
tei_zi =
  
  ##
  element ns1:zi { tei_macro.phraseSeq, empty }
tei_yin =
  
  ## Content of a soundgloss, either of the fanqie type, or a description,
  ##                             how a Sanskrit transkription is supposed to be rendered.
  element ns1:yin {
    (tei_macro.phraseSeq | tei_model.noteLike | tei_zi | tei_sg)*, empty
  }
tei_sg =
  
  ## Describes how the sound is modified on the preceding zi
  ##                             element.
  element ns1:sg {
    tei_macro.phraseSeq,
    
    ##
    attribute type { text }?,
    empty
  }
tei_jl_title =
  
  ##
  element ns1:jl_title {
    tei_macro.phraseSeq,
    
    ##
    attribute type { text }?,
    empty
  }
tei_jl_juan =
  
  ##
  element ns1:jl_juan {
    tei_macro.phraseSeq,
    
    ##
    attribute n { text }?,
    empty
  }
tei_jl_byline =
  
  ##
  element ns1:jl_byline {
    tei_macro.phraseSeq,
    
    ##
    attribute type { text }?,
    empty
  }
  
tei_msDesc =  
	## (manuscript description) contains a description of a single identifiable
	## manuscript or other text-bearing object. [10.1. ]
	element msDesc {
		(
			tei_msIdentifier,
			tei_model.headLike*,
			tei_model.pLike*
		),
	att.global.attributes,
	att.typed.attributes,
	empty
	}

tei_msIdentifier =
	## (manuscript identifier) contains the information required to identify
	## the  manuscript being described.  [10.4. ]
	element msIdentifier {
	(
		tei_settlement,
		tei_repository?,
		tei_idno?
	),
	att.global.attributes,
	empty
	}

tei_repository =  
	## contains the name of a repository within which manuscripts are stored, possibly forming part of an institution. [10.4. ]
	element repository {
		tei_macro.xtext,
		att.global.attributes,
		att.naming.attributes,
		empty
	}

tei_punctuation =
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [2.3.3. The Editorial Practices Declaration 3.2. Treatment of Punctuation]
  element punctuation {
    tei_model.pLike*,
    att.declarable.attributes,
    att.global.attributes,
    
    ## indicates whether or not punctation marks have been retained as content within the text.
    attribute marks {
      
      ## no punctuation marks have been retained
      "none"
      | 
        ## some punctuation marks have been retained
        "some"
      | 
        ## all punctuation marks have been retained
        "all"
    }?,
    
    ## indicates the positioning of punctuation marks that are associated with marked up text as being encoded within the element surrounding the text or immediately before or after it.
    attribute placement {
      
      ## punctuation marks found at the start or end of a marked up text component are included within its surrounding element;
      "internal"
      | 
        ## punctuation marks found at the start or end of a marked up text component appear immediately before or after the surrounding element
        "external"
    }?,
    empty
  }
  
start = tei_TEI
